{"ast":null,"code":"'use strict';\n\nvar TYPES = require('./datatypes').TYPES;\n\nvar Table = require('./table');\n\nvar PromiseLibrary = Promise;\nvar driver = {};\nvar map = [];\n/**\n * Register you own type map.\n *\n * @path module.exports.map\n * @param {*} jstype JS data type.\n * @param {*} sqltype SQL data type.\n */\n\nmap.register = function (jstype, sqltype) {\n  for (var index = 0; index < this.length; index++) {\n    var item = this[index];\n\n    if (item.js === jstype) {\n      this.splice(index, 1);\n      break;\n    }\n  }\n\n  this.push({\n    js: jstype,\n    sql: sqltype\n  });\n  return null;\n};\n\nmap.register(String, TYPES.NVarChar);\nmap.register(Number, TYPES.Int);\nmap.register(Boolean, TYPES.Bit);\nmap.register(Date, TYPES.DateTime);\nmap.register(Buffer, TYPES.VarBinary);\nmap.register(Table, TYPES.TVP);\n/**\n * @ignore\n */\n\nvar getTypeByValue = function getTypeByValue(value) {\n  if (value === null || value === undefined) {\n    return TYPES.NVarChar;\n  }\n\n  switch (typeof value) {\n    case 'string':\n      for (var _i = 0, _Array$from = Array.from(map); _i < _Array$from.length; _i++) {\n        var item = _Array$from[_i];\n\n        if (item.js === String) {\n          return item.sql;\n        }\n      }\n\n      return TYPES.NVarChar;\n\n    case 'number':\n      if (value % 1 === 0) {\n        return TYPES.Int;\n      } else {\n        return TYPES.Float;\n      }\n\n    case 'boolean':\n      for (var _i2 = 0, _Array$from2 = Array.from(map); _i2 < _Array$from2.length; _i2++) {\n        item = _Array$from2[_i2];\n\n        if (item.js === Boolean) {\n          return item.sql;\n        }\n      }\n\n      return TYPES.Bit;\n\n    case 'object':\n      for (var _i3 = 0, _Array$from3 = Array.from(map); _i3 < _Array$from3.length; _i3++) {\n        item = _Array$from3[_i3];\n\n        if (value instanceof item.js) {\n          return item.sql;\n        }\n      }\n\n      return TYPES.NVarChar;\n\n    default:\n      return TYPES.NVarChar;\n  }\n};\n\nmodule.exports = {\n  driver: driver,\n  getTypeByValue: getTypeByValue,\n  map: map\n};\nObject.defineProperty(module.exports, 'Promise', {\n  get: function get() {\n    return PromiseLibrary;\n  },\n  set: function set(value) {\n    PromiseLibrary = value;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}