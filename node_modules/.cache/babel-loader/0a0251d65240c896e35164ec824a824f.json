{"ast":null,"code":"/*\r\n * @copyright\r\n * Copyright Â© Microsoft Open Technologies, Inc.\r\n *\r\n * All Rights Reserved\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http: *www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS\r\n * OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION\r\n * ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A\r\n * PARTICULAR PURPOSE, MERCHANTABILITY OR NON-INFRINGEMENT.\r\n *\r\n * See the Apache License, Version 2.0 for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n'use strict';\n\nvar _ = require('underscore');\n\nvar ac = require('./authentication-context');\n\nvar authParams = require('./authentication-parameters');\n\nvar logging = require('./log');\n\nvar MemoryCache = require('./memory-cache');\n\nexports = {};\nexports.Logging = logging.Logging;\nexports.AuthenticationContext = ac.AuthenticationContext;\nexports.setGlobalADALOptions = ac.setGlobalADALOptions;\nexports.getGlobalADALOptions = ac.getGlobalADALOptions;\nexports.MemoryCache = MemoryCache;\n\n_.extend(exports, authParams);\n/**\r\n * Creates a new AuthenticationContext object.  By default the authority will be checked against\r\n * a list of known Azure Active Directory authorities.  If the authority is not recognized as\r\n * one of these well known authorities then token acquisition will fail.  This behavior can be\r\n * turned off via the validateAuthority parameter below.\r\n * @function\r\n * @param {string}  authority            A URL that identifies a token authority.\r\n * @param {bool}    [validateAuthority]  Turns authority validation on or off.  This parameter default to true.\r\n * @returns {AuthenticationContext}      A new authentication context.\r\n */\n\n\nexports.createAuthenticationContext = function (authority, validateAuthority) {\n  return new ac.AuthenticationContext(authority, validateAuthority);\n};\n\nmodule.exports = exports;","map":null,"metadata":{},"sourceType":"script"}