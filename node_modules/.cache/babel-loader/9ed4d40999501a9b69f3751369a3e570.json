{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // const OPTION = {\n//   WITH_RECOMPILE: 0x01,\n//   NO_METADATA: 0x02,\n//   REUSE_METADATA: 0x04\n// };\n\n\nvar STATUS = {\n  BY_REF_VALUE: 0x01,\n  DEFAULT_VALUE: 0x02\n};\n/*\n  s2.2.6.5\n */\n\nvar RpcRequestPayload = /*#__PURE__*/function () {\n  function RpcRequestPayload(request, txnDescriptor, options) {\n    _classCallCheck(this, RpcRequestPayload);\n\n    this.request = void 0;\n    this.procedure = void 0;\n    this.options = void 0;\n    this.txnDescriptor = void 0;\n    this.request = request;\n    this.procedure = this.request.sqlTextOrProcedure;\n    this.options = options;\n    this.txnDescriptor = txnDescriptor;\n  }\n\n  _createClass(RpcRequestPayload, [{\n    key: \"getData\",\n    value: function getData(cb) {\n      var _this = this;\n\n      var buffer = new _writableTrackingBuffer.default(500);\n\n      if (this.options.tdsVersion >= '7_2') {\n        var outstandingRequestCount = 1;\n        (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n      }\n\n      if (typeof this.procedure === 'string') {\n        buffer.writeUsVarchar(this.procedure);\n      } else {\n        buffer.writeUShort(0xFFFF);\n        buffer.writeUShort(this.procedure);\n      }\n\n      var optionFlags = 0;\n      buffer.writeUInt16LE(optionFlags);\n      var parameters = this.request.parameters;\n\n      var writeNext = function writeNext(i) {\n        if (i >= parameters.length) {\n          cb(buffer.data);\n          return;\n        }\n\n        _this._writeParameterData(parameters[i], buffer, function () {\n          setImmediate(function () {\n            writeNext(i + 1);\n          });\n        });\n      };\n\n      writeNext(0);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + ('RPC Request - ' + this.procedure);\n    }\n  }, {\n    key: \"_writeParameterData\",\n    value: function _writeParameterData(parameter, buffer, cb) {\n      buffer.writeBVarchar('@' + parameter.name);\n      var statusFlags = 0;\n\n      if (parameter.output) {\n        statusFlags |= STATUS.BY_REF_VALUE;\n      }\n\n      buffer.writeUInt8(statusFlags);\n      var param = {\n        value: parameter.value\n      };\n      var type = parameter.type;\n\n      if ((type.id & 0x30) === 0x20) {\n        if (parameter.length) {\n          param.length = parameter.length;\n        } else if (type.resolveLength) {\n          param.length = type.resolveLength(parameter);\n        }\n      }\n\n      if (parameter.precision) {\n        param.precision = parameter.precision;\n      } else if (type.resolvePrecision) {\n        param.precision = type.resolvePrecision(parameter);\n      }\n\n      if (parameter.scale) {\n        param.scale = parameter.scale;\n      } else if (type.resolveScale) {\n        param.scale = type.resolveScale(parameter);\n      }\n\n      type.writeTypeInfo(buffer, param, this.options);\n      type.writeParameterData(buffer, param, this.options, function () {\n        cb();\n      });\n    }\n  }]);\n\n  return RpcRequestPayload;\n}();\n\nvar _default = RpcRequestPayload;\nexports.default = _default;\nmodule.exports = RpcRequestPayload;","map":null,"metadata":{},"sourceType":"script"}