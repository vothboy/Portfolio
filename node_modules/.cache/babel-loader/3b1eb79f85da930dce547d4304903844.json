{"ast":null,"code":"/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nexport function getRelatedTarget(event) {\n  return event.relatedTarget || event.nativeEvent.explicitOriginalTarget || document.activeElement;\n}\nexport var isRightClick = function isRightClick(event) {\n  return event.button !== 0;\n};","map":{"version":3,"sources":["../../src/dom.ts"],"names":["keyCode","isArrowKey","key","eventKey","event","document","isRightClick"],"mappings":"AAEA;AACA;AACA;AACA;AACA,OAAO,SAAA,iBAAA,CAAA,KAAA,EAAuD;AAC5D,MAAM,GAAN,GAAA,KAAA,CAAM,GAAN;AAAA,MAAaA,OAAb,GAAA,KAAA,CAAaA,OAAb;AAEA,MAAMC,UAAU,GACdD,OAAO,IAAPA,EAAAA,IAAiBA,OAAO,IAAxBA,EAAAA,IAAkCE,GAAG,CAAHA,OAAAA,CAAAA,OAAAA,MADpC,CAAA;AAGA,MAAMC,QAAQ,GAAGF,UAAU,GAAA,UAAA,GAAA,GAA3B,GAAA;AAEA,SAAA,QAAA;AACD;AAED,OAAO,SAAA,gBAAA,CAAA,KAAA,EAEL;AACA,SAAQG,KAAK,CAALA,aAAAA,IACLA,KAAD,CAAA,WAACA,CADKA,sBAAAA,IAENC,QAAQ,CAFV,aAAA;AAGD;AAED,OAAO,IAAMC,YAAY,GACvBF,SADWE,YACXF,CAAAA,KAD0B;AAAA,SAEvBA,KAAK,CAALA,MAAAA,KAFE,CAAqB;AAAA,CAArB","sourcesContent":["import { EventKeys } from \"@chakra-ui/utils\"\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(event: React.KeyboardEvent) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget<E extends FocusEvent | React.FocusEvent>(\n  event: E,\n) {\n  return (event.relatedTarget ||\n    (event as any).nativeEvent.explicitOriginalTarget ||\n    document.activeElement) as HTMLElement\n}\n\nexport const isRightClick = <E extends MouseEvent | React.MouseEvent>(\n  event: E,\n) => event.button !== 0\n"]},"metadata":{},"sourceType":"module"}