{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar msRest = require(\"@azure/ms-rest-js\");\n\nvar applicationTokenCredentialsBase_1 = require(\"../credentials/applicationTokenCredentialsBase\");\n\nvar authConstants_1 = require(\"../util/authConstants\");\n/**\n * Builds an array of tenantIds.\n * @param {TokenCredentialsBase} credentials The credentials.\n * @param {string} apiVersion default value 2016-06-01\n * @returns {Promise<string[]>} resolves to an array of tenantIds and rejects with an error.\n */\n\n\nfunction buildTenantList(credentials) {\n  var apiVersion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"2016-06-01\";\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var client, baseUrl, reqUrl, req, res, result, tenants, tenant;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(credentials.domain && credentials.domain !== authConstants_1.AuthConstants.AAD_COMMON_TENANT)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve([credentials.domain]));\n\n          case 2:\n            client = new msRest.ServiceClient(credentials);\n            baseUrl = credentials.environment.resourceManagerEndpointUrl;\n            reqUrl = \"\".concat(baseUrl).concat(baseUrl.endsWith(\"/\") ? \"\" : \"/\", \"tenants?api-version=\").concat(apiVersion);\n            req = {\n              url: reqUrl,\n              method: \"GET\"\n            };\n            _context.prev = 6;\n            _context.next = 9;\n            return client.sendRequest(req);\n\n          case 9:\n            res = _context.sent;\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](6);\n            return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n          case 15:\n            result = [];\n            tenants = res.parsedBody;\n\n            for (tenant in tenants.value) {\n              result.push(tenant.tenantId);\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve(result));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 12]]);\n  }));\n}\n\nexports.buildTenantList = buildTenantList;\n\nfunction getSubscriptionsFromTenants(credentials, tenantList) {\n  var apiVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"2016-06-01\";\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var subscriptions, userType, username, originalDomain, _iterator, _step, _loop, _ret;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            subscriptions = [];\n            userType = \"user\";\n            originalDomain = credentials.domain;\n\n            if (credentials instanceof applicationTokenCredentialsBase_1.ApplicationTokenCredentialsBase) {\n              userType = \"servicePrincipal\";\n              username = credentials.clientId;\n            } else {\n              username = credentials.username;\n            }\n\n            _iterator = _createForOfIteratorHelper(tenantList);\n            _context3.prev = 5;\n            _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n              var tenant, client, baseUrl, reqUrl, req, res, subscriptionList;\n              return _regeneratorRuntime.wrap(function _loop$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      tenant = _step.value;\n                      credentials.domain = tenant;\n                      client = new msRest.ServiceClient(credentials);\n                      baseUrl = credentials.environment.resourceManagerEndpointUrl;\n                      reqUrl = \"\".concat(baseUrl).concat(baseUrl.endsWith(\"/\") ? \"\" : \"/\", \"subscriptions?api-version=\").concat(apiVersion);\n                      req = {\n                        url: reqUrl,\n                        method: \"GET\"\n                      };\n                      res = void 0;\n                      _context2.prev = 7;\n                      _context2.next = 10;\n                      return client.sendRequest(req);\n\n                    case 10:\n                      res = _context2.sent;\n                      _context2.next = 16;\n                      break;\n\n                    case 13:\n                      _context2.prev = 13;\n                      _context2.t0 = _context2[\"catch\"](7);\n                      return _context2.abrupt(\"return\", {\n                        v: Promise.reject(_context2.t0)\n                      });\n\n                    case 16:\n                      subscriptionList = res.parsedBody.value;\n                      subscriptions = subscriptions.concat(subscriptionList.map(function (s) {\n                        s.tenantId = tenant;\n                        s.user = {\n                          name: username,\n                          type: userType\n                        };\n                        s.environmentName = credentials.environment.name;\n                        s.name = s.displayName;\n                        s.id = s.subscriptionId;\n                        delete s.displayName;\n                        delete s.subscriptionId;\n                        delete s.subscriptionPolicies;\n                        return s;\n                      }));\n\n                    case 18:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _loop, null, [[7, 13]]);\n            });\n\n            _iterator.s();\n\n          case 8:\n            if ((_step = _iterator.n()).done) {\n              _context3.next = 15;\n              break;\n            }\n\n            return _context3.delegateYield(_loop(), \"t0\", 10);\n\n          case 10:\n            _ret = _context3.t0;\n\n            if (!(typeof _ret === \"object\")) {\n              _context3.next = 13;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", _ret.v);\n\n          case 13:\n            _context3.next = 8;\n            break;\n\n          case 15:\n            _context3.next = 20;\n            break;\n\n          case 17:\n            _context3.prev = 17;\n            _context3.t1 = _context3[\"catch\"](5);\n\n            _iterator.e(_context3.t1);\n\n          case 20:\n            _context3.prev = 20;\n\n            _iterator.f();\n\n            return _context3.finish(20);\n\n          case 23:\n            // Reset the original domain.\n            credentials.domain = originalDomain;\n            return _context3.abrupt(\"return\", Promise.resolve(subscriptions));\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2, null, [[5, 17, 20, 23]]);\n  }));\n}\n\nexports.getSubscriptionsFromTenants = getSubscriptionsFromTenants;","map":null,"metadata":{},"sourceType":"script"}