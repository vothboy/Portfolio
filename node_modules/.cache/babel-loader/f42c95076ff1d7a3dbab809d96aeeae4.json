{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __awaiter, __generator } from \"tslib\";\nimport { Constants as MSRestConstants } from \"../util/constants\";\nvar DEFAULT_AUTHORIZATION_SCHEME = \"Bearer\";\n/**\n * This class provides a simple extension to use {@link TokenCredential} from `@azure/identity` library to\n * use with legacy Azure SDKs that accept {@link ServiceClientCredentials} family of credentials for authentication.\n */\n\nvar AzureIdentityCredentialAdapter =\n/** @class */\nfunction () {\n  function AzureIdentityCredentialAdapter(azureTokenCredential, scopes) {\n    if (scopes === void 0) {\n      scopes = \"https://management.azure.com/.default\";\n    }\n\n    this.azureTokenCredential = azureTokenCredential;\n    this.scopes = scopes;\n  }\n\n  AzureIdentityCredentialAdapter.prototype.getToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var accessToken, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.azureTokenCredential.getToken(this.scopes)];\n\n          case 1:\n            accessToken = _a.sent();\n\n            if (accessToken !== null) {\n              result = {\n                accessToken: accessToken.token,\n                tokenType: DEFAULT_AUTHORIZATION_SCHEME,\n                expiresOn: accessToken.expiresOnTimestamp\n              };\n              return [2\n              /*return*/\n              , result];\n            } else {\n              throw new Error(\"Could find token for scope\");\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AzureIdentityCredentialAdapter.prototype.signRequest = function (webResource) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getToken()];\n\n          case 1:\n            tokenResponse = _a.sent();\n            webResource.headers.set(MSRestConstants.HeaderConstants.AUTHORIZATION, tokenResponse.tokenType + \" \" + tokenResponse.accessToken);\n            return [2\n            /*return*/\n            , Promise.resolve(webResource)];\n        }\n      });\n    });\n  };\n\n  return AzureIdentityCredentialAdapter;\n}();\n\nexport { AzureIdentityCredentialAdapter };","map":null,"metadata":{},"sourceType":"module"}