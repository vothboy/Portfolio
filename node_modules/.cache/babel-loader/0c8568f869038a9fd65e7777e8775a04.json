{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sender = exports.ParallelSendStrategy = void 0;\n\nvar _dgram = _interopRequireDefault(require(\"dgram\"));\n\nvar _dns = _interopRequireDefault(require(\"dns\"));\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar punycode = _interopRequireWildcard(require(\"punycode\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ParallelSendStrategy = /*#__PURE__*/function () {\n  function ParallelSendStrategy(addresses, port, request) {\n    _classCallCheck(this, ParallelSendStrategy);\n\n    this.addresses = void 0;\n    this.port = void 0;\n    this.request = void 0;\n    this.socketV4 = void 0;\n    this.socketV6 = void 0;\n    this.onMessage = void 0;\n    this.onError = void 0;\n    this.addresses = addresses;\n    this.port = port;\n    this.request = request;\n    this.socketV4 = null;\n    this.socketV6 = null;\n    this.onError = null;\n    this.onMessage = null;\n  }\n\n  _createClass(ParallelSendStrategy, [{\n    key: \"clearSockets\",\n    value: function clearSockets() {\n      var clearSocket = function clearSocket(socket, onError, onMessage) {\n        socket.removeListener('error', onError);\n        socket.removeListener('message', onMessage);\n        socket.close();\n      };\n\n      if (this.socketV4) {\n        clearSocket(this.socketV4, this.onError, this.onMessage);\n        this.socketV4 = null;\n      }\n\n      if (this.socketV6) {\n        clearSocket(this.socketV6, this.onError, this.onMessage);\n        this.socketV6 = null;\n      }\n    }\n  }, {\n    key: \"send\",\n    value: function send(cb) {\n      var _this = this;\n\n      var errorCount = 0;\n\n      var onError = function onError(err) {\n        errorCount++;\n\n        if (errorCount === _this.addresses.length) {\n          _this.clearSockets();\n\n          cb(err);\n        }\n      };\n\n      var onMessage = function onMessage(message) {\n        _this.clearSockets();\n\n        cb(null, message);\n      };\n\n      var createDgramSocket = function createDgramSocket(udpType, onError, onMessage) {\n        var socket = _dgram.default.createSocket(udpType);\n\n        socket.on('error', onError);\n        socket.on('message', onMessage);\n        return socket;\n      };\n\n      for (var j = 0; j < this.addresses.length; j++) {\n        var udpTypeV4 = 'udp4';\n        var udpTypeV6 = 'udp6';\n        var udpType = this.addresses[j].family === 6 ? udpTypeV6 : udpTypeV4;\n        var socket = void 0;\n\n        if (udpType === udpTypeV4) {\n          if (!this.socketV4) {\n            this.socketV4 = createDgramSocket(udpTypeV4, onError, onMessage);\n          }\n\n          socket = this.socketV4;\n        } else {\n          if (!this.socketV6) {\n            this.socketV6 = createDgramSocket(udpTypeV6, onError, onMessage);\n          }\n\n          socket = this.socketV6;\n        }\n\n        socket.send(this.request, 0, this.request.length, this.port, this.addresses[j].address);\n      }\n\n      this.onError = onError;\n      this.onMessage = onMessage;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.clearSockets();\n    }\n  }]);\n\n  return ParallelSendStrategy;\n}();\n\nexports.ParallelSendStrategy = ParallelSendStrategy;\n\nvar Sender = /*#__PURE__*/function () {\n  function Sender(host, port, request) {\n    _classCallCheck(this, Sender);\n\n    this.host = void 0;\n    this.port = void 0;\n    this.request = void 0;\n    this.parallelSendStrategy = void 0;\n    this.host = host;\n    this.port = port;\n    this.request = request;\n    this.parallelSendStrategy = null;\n  }\n\n  _createClass(Sender, [{\n    key: \"execute\",\n    value: function execute(cb) {\n      if (_net.default.isIP(this.host)) {\n        this.executeForIP(cb);\n      } else {\n        this.executeForHostname(cb);\n      }\n    }\n  }, {\n    key: \"executeForIP\",\n    value: function executeForIP(cb) {\n      this.executeForAddresses([{\n        address: this.host,\n        family: _net.default.isIPv6(this.host) ? 6 : 4\n      }], cb);\n    } // Wrapper for stubbing. Sinon does not have support for stubbing module functions.\n\n  }, {\n    key: \"invokeLookupAll\",\n    value: function invokeLookupAll(host, cb) {\n      _dns.default.lookup(punycode.toASCII(host), {\n        all: true\n      }, cb);\n    }\n  }, {\n    key: \"executeForHostname\",\n    value: function executeForHostname(cb) {\n      var _this2 = this;\n\n      this.invokeLookupAll(this.host, function (err, addresses) {\n        if (err) {\n          return cb(err);\n        }\n\n        _this2.executeForAddresses(addresses, cb);\n      });\n    } // Wrapper for stubbing creation of Strategy object. Sinon support for constructors\n    // seems limited.\n\n  }, {\n    key: \"createParallelSendStrategy\",\n    value: function createParallelSendStrategy(addresses, port, request) {\n      return new ParallelSendStrategy(addresses, port, request);\n    }\n  }, {\n    key: \"executeForAddresses\",\n    value: function executeForAddresses(addresses, cb) {\n      this.parallelSendStrategy = this.createParallelSendStrategy(addresses, this.port, this.request);\n      this.parallelSendStrategy.send(cb);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.parallelSendStrategy) {\n        this.parallelSendStrategy.cancel();\n      }\n    }\n  }]);\n\n  return Sender;\n}();\n\nexports.Sender = Sender;","map":null,"metadata":{},"sourceType":"script"}