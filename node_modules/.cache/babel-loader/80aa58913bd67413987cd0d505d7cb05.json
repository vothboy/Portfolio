{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar optionBufferSize = 20;\nvar VERSION = 0x000000001;\nvar SUBBUILD = 0x0001;\nvar TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nvar ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nvar encryptByValue = {};\n\nfor (var name in ENCRYPT) {\n  var value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\n\nvar MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nvar marsByValue = {};\n\nfor (var _name in MARS) {\n  var _value = MARS[_name];\n  marsByValue[_value] = _name;\n}\n/*\n  s2.2.6.4\n */\n\n\nvar PreloginPayload = /*#__PURE__*/function () {\n  function PreloginPayload() {\n    var bufferOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      encrypt: false\n    };\n\n    _classCallCheck(this, PreloginPayload);\n\n    this.options = void 0;\n\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n\n    this.extractOptions();\n  }\n\n  _createClass(PreloginPayload, [{\n    key: \"createOptions\",\n    value: function createOptions() {\n      var options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n      var length = 0;\n\n      for (var i = 0, len = options.length; i < len; i++) {\n        var option = options[i];\n        length += 5 + option.data.length;\n      }\n\n      length++; // terminator\n\n      this.data = Buffer.alloc(length, 0);\n      var optionOffset = 0;\n      var optionDataOffset = 5 * options.length + 1;\n\n      for (var j = 0, _len = options.length; j < _len; j++) {\n        var _option = options[j];\n        this.data.writeUInt8(_option.token, optionOffset + 0);\n        this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n        this.data.writeUInt16BE(_option.data.length, optionOffset + 3);\n        optionOffset += 5;\n\n        _option.data.copy(this.data, optionDataOffset);\n\n        optionDataOffset += _option.data.length;\n      }\n\n      this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n    }\n  }, {\n    key: \"createVersionOption\",\n    value: function createVersionOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt32BE(VERSION);\n      buffer.writeUInt16BE(SUBBUILD);\n      return {\n        token: TOKEN.VERSION,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createEncryptionOption\",\n    value: function createEncryptionOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n\n      if (this.options.encrypt) {\n        buffer.writeUInt8(ENCRYPT.ON);\n      } else {\n        buffer.writeUInt8(ENCRYPT.NOT_SUP);\n      }\n\n      return {\n        token: TOKEN.ENCRYPTION,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createInstanceOption\",\n    value: function createInstanceOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(0x00);\n      return {\n        token: TOKEN.INSTOPT,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createThreadIdOption\",\n    value: function createThreadIdOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt32BE(0x00);\n      return {\n        token: TOKEN.THREADID,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createMarsOption\",\n    value: function createMarsOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(MARS.OFF);\n      return {\n        token: TOKEN.MARS,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createFedAuthOption\",\n    value: function createFedAuthOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(0x01);\n      return {\n        token: TOKEN.FEDAUTHREQUIRED,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"extractOptions\",\n    value: function extractOptions() {\n      var offset = 0;\n\n      while (this.data[offset] !== TOKEN.TERMINATOR) {\n        var dataOffset = this.data.readUInt16BE(offset + 1);\n        var dataLength = this.data.readUInt16BE(offset + 3);\n\n        switch (this.data[offset]) {\n          case TOKEN.VERSION:\n            this.extractVersion(dataOffset);\n            break;\n\n          case TOKEN.ENCRYPTION:\n            this.extractEncryption(dataOffset);\n            break;\n\n          case TOKEN.INSTOPT:\n            this.extractInstance(dataOffset);\n            break;\n\n          case TOKEN.THREADID:\n            if (dataLength > 0) {\n              this.extractThreadId(dataOffset);\n            }\n\n            break;\n\n          case TOKEN.MARS:\n            this.extractMars(dataOffset);\n            break;\n\n          case TOKEN.FEDAUTHREQUIRED:\n            this.extractFedAuth(dataOffset);\n            break;\n        }\n\n        offset += 5;\n        dataOffset += dataLength;\n      }\n    }\n  }, {\n    key: \"extractVersion\",\n    value: function extractVersion(offset) {\n      this.version = {\n        major: this.data.readUInt8(offset + 0),\n        minor: this.data.readUInt8(offset + 1),\n        patch: this.data.readUInt8(offset + 2),\n        trivial: this.data.readUInt8(offset + 3),\n        subbuild: this.data.readUInt16BE(offset + 4)\n      };\n    }\n  }, {\n    key: \"extractEncryption\",\n    value: function extractEncryption(offset) {\n      this.encryption = this.data.readUInt8(offset);\n      this.encryptionString = encryptByValue[this.encryption];\n    }\n  }, {\n    key: \"extractInstance\",\n    value: function extractInstance(offset) {\n      this.instance = this.data.readUInt8(offset);\n    }\n  }, {\n    key: \"extractThreadId\",\n    value: function extractThreadId(offset) {\n      this.threadId = this.data.readUInt32BE(offset);\n    }\n  }, {\n    key: \"extractMars\",\n    value: function extractMars(offset) {\n      this.mars = this.data.readUInt8(offset);\n      this.marsString = marsByValue[this.mars];\n    }\n  }, {\n    key: \"extractFedAuth\",\n    value: function extractFedAuth(offset) {\n      this.fedAuthRequired = this.data.readUInt8(offset);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d %d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.patch, this.version.trivial, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n    }\n  }]);\n\n  return PreloginPayload;\n}();\n\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;","map":null,"metadata":{},"sourceType":"script"}