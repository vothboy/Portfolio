{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bl = _interopRequireDefault(require(\"bl\"));\n\nvar _readableStream = require(\"readable-stream\");\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nvar _packet = require(\"./packet\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n  IncomingMessageStream\n  Transform received TDS data into individual IncomingMessage streams.\n*/\n\n\nvar IncomingMessageStream = /*#__PURE__*/function (_readableStream$Trans) {\n  _inherits(IncomingMessageStream, _readableStream$Trans);\n\n  function IncomingMessageStream(debug) {\n    var _this;\n\n    _classCallCheck(this, IncomingMessageStream);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IncomingMessageStream).call(this, {\n      readableObjectMode: true\n    }));\n    _this.debug = void 0;\n    _this.bl = void 0;\n    _this.currentMessage = void 0;\n    _this.debug = debug;\n    _this.currentMessage = undefined;\n    _this.bl = new _bl.default();\n    return _this;\n  }\n\n  _createClass(IncomingMessageStream, [{\n    key: \"pause\",\n    value: function pause() {\n      _get(_getPrototypeOf(IncomingMessageStream.prototype), \"pause\", this).call(this);\n\n      if (this.currentMessage) {\n        this.currentMessage.pause();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      _get(_getPrototypeOf(IncomingMessageStream.prototype), \"resume\", this).call(this);\n\n      if (this.currentMessage) {\n        this.currentMessage.resume();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"processBufferedData\",\n    value: function processBufferedData(callback) {\n      var _this2 = this;\n\n      // The packet header is always 8 bytes of length.\n      while (this.bl.length >= _packet.HEADER_LENGTH) {\n        // Get the full packet length\n        var length = this.bl.readUInt16BE(2);\n\n        if (this.bl.length >= length) {\n          var data = this.bl.slice(0, length);\n          this.bl.consume(length); // TODO: Get rid of creating `Packet` instances here.\n\n          var packet = new _packet.Packet(data);\n          this.debug.packet('Received', packet);\n          this.debug.data(packet);\n          var message = this.currentMessage;\n\n          if (message === undefined) {\n            this.currentMessage = message = new _message.default({\n              type: packet.type(),\n              resetConnection: false\n            });\n            this.push(message);\n          }\n\n          if (packet.isLast()) {\n            // Wait until the current message was fully processed before we\n            // continue processing any remaining messages.\n            message.once('end', function () {\n              _this2.currentMessage = undefined;\n\n              _this2.processBufferedData(callback);\n            });\n            message.end(packet.data());\n            return;\n          } else if (!message.write(packet.data())) {\n            // If too much data is buffering up in the\n            // current message, wait for it to drain.\n            message.once('drain', function () {\n              _this2.processBufferedData(callback);\n            });\n            return;\n          }\n        } else {\n          break;\n        }\n      } // Not enough data to read the next packet. Stop here and wait for\n      // the next call to `_transform`.\n\n\n      callback();\n    }\n  }, {\n    key: \"_transform\",\n    value: function _transform(chunk, _encoding, callback) {\n      this.bl.append(chunk);\n      this.processBufferedData(callback);\n    }\n  }]);\n\n  return IncomingMessageStream;\n}(_readableStream.Transform);\n\nvar _default = IncomingMessageStream;\nexports.default = _default;\nmodule.exports = IncomingMessageStream;","map":null,"metadata":{},"sourceType":"script"}