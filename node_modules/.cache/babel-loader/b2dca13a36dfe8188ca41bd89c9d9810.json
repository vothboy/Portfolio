{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.infoParser = infoParser;\nexports.errorParser = errorParser;\n\nvar _token = require(\"./token\");\n\nfunction parseToken(parser, options, callback) {\n  // length\n  parser.readUInt16LE(function () {\n    parser.readUInt32LE(function (number) {\n      parser.readUInt8(function (state) {\n        parser.readUInt8(function (clazz) {\n          parser.readUsVarChar(function (message) {\n            parser.readBVarChar(function (serverName) {\n              parser.readBVarChar(function (procName) {\n                (options.tdsVersion < '7_2' ? parser.readUInt16LE : parser.readUInt32LE).call(parser, function (lineNumber) {\n                  callback({\n                    'number': number,\n                    'state': state,\n                    'class': clazz,\n                    'message': message,\n                    'serverName': serverName,\n                    'procName': procName,\n                    'lineNumber': lineNumber\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction infoParser(parser, _colMetadata, options, callback) {\n  parseToken(parser, options, function (data) {\n    callback(new _token.InfoMessageToken(data));\n  });\n}\n\nfunction errorParser(parser, _colMetadata, options, callback) {\n  parseToken(parser, options, function (data) {\n    callback(new _token.ErrorMessageToken(data));\n  });\n}","map":null,"metadata":{},"sourceType":"script"}