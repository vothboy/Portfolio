{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tokenCredentialsBase_1 = require(\"./tokenCredentialsBase\");\n\nvar UserTokenCredentials = /*#__PURE__*/function (_tokenCredentialsBase) {\n  _inherits(UserTokenCredentials, _tokenCredentialsBase);\n\n  /**\n   * Creates a new UserTokenCredentials object.\n   *\n   * @constructor\n   * @param {string} clientId The active directory application client id.\n   * See {@link https://azure.microsoft.com/en-us/documentation/articles/active-directory-devquickstarts-dotnet/ Active Directory Quickstart for .Net}\n   * for an example.\n   * @param {string} domain The domain or tenant id containing this application.\n   * @param {string} username The user name for the Organization Id account.\n   * @param {string} password The password for the Organization Id account.\n   * @param {string} [tokenAudience] The audience for which the token is requested. Valid values are 'graph', 'batch', or any other resource like 'https://vault.azure.net/'.\n   * If tokenAudience is 'graph' then domain should also be provided and its value should not be the default 'common' tenant. It must be a string (preferrably in a guid format).\n   * @param {Environment} [environment] The azure environment to authenticate with.\n   * @param {object} [tokenCache] The token cache. Default value is the MemoryCache object from adal.\n   */\n  function UserTokenCredentials(clientId, domain, username, password, tokenAudience, environment, tokenCache) {\n    var _this;\n\n    _classCallCheck(this, UserTokenCredentials);\n\n    if (!clientId || typeof clientId.valueOf() !== \"string\") {\n      throw new Error(\"clientId must be a non empty string.\");\n    }\n\n    if (!domain || typeof domain.valueOf() !== \"string\") {\n      throw new Error(\"domain must be a non empty string.\");\n    }\n\n    if (!username || typeof username.valueOf() !== \"string\") {\n      throw new Error(\"username must be a non empty string.\");\n    }\n\n    if (!password || typeof password.valueOf() !== \"string\") {\n      throw new Error(\"password must be a non empty string.\");\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTokenCredentials).call(this, clientId, domain, tokenAudience, environment, tokenCache));\n    _this.username = username;\n    _this.password = password;\n    return _this;\n  }\n\n  _createClass(UserTokenCredentials, [{\n    key: \"crossCheckUserNameWithToken\",\n    value: function crossCheckUserNameWithToken(username, userIdFromToken) {\n      // to maintain the casing consistency between \"azureprofile.json\" and token cache. (RD 1996587)\n      // use the \"userId\" here, which should be the same with \"username\" except the casing.\n      return username.toLowerCase() === userIdFromToken.toLowerCase();\n    }\n    /**\n     * Tries to get the token from cache initially. If that is unsuccessful then it tries to get the token from ADAL.\n     * @returns {Promise<TokenResponse>}\n     * {object} [tokenResponse] The tokenResponse (tokenType and accessToken are the two important properties).\n     * @memberof UserTokenCredentials\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var self, resource;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.getTokenFromCache(this.username);\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                self = this;\n                resource = this.getActiveDirectoryResourceId();\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  self.authContext.acquireTokenWithUsernamePassword(resource, self.username, self.password, self.clientId, function (error, tokenResponse) {\n                    if (error) {\n                      return reject(error);\n                    }\n\n                    if (tokenResponse.error || tokenResponse.errorDescription) {\n                      return reject(tokenResponse);\n                    }\n\n                    tokenResponse = tokenResponse;\n\n                    if (self.crossCheckUserNameWithToken(self.username, tokenResponse.userId)) {\n                      return resolve(tokenResponse);\n                    } else {\n                      return reject(\"The userId \\\"\".concat(tokenResponse.userId, \"\\\" in access token doesn\\\"t match the username \\\"\").concat(self.username, \"\\\" provided during authentication.\"));\n                    }\n                  });\n                }));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n    }\n  }]);\n\n  return UserTokenCredentials;\n}(tokenCredentialsBase_1.TokenCredentialsBase);\n\nexports.UserTokenCredentials = UserTokenCredentials;","map":null,"metadata":{},"sourceType":"script"}