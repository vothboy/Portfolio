{"ast":null,"code":"export function getOwnerWindow(node) {\n  var _getOwnerDocument$def, _getOwnerDocument;\n\n  return node instanceof Element ? (_getOwnerDocument$def = (_getOwnerDocument = getOwnerDocument(node)) == null ? void 0 : _getOwnerDocument.defaultView) != null ? _getOwnerDocument$def : window : window;\n}\nexport function getOwnerDocument(node) {\n  var _node$ownerDocument;\n\n  return node instanceof Element ? (_node$ownerDocument = node.ownerDocument) != null ? _node$ownerDocument : document : document;\n}\nexport function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nexport var isBrowser = canUseDOM();\nexport var dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : undefined;\n};\nexport var ariaAttr = function ariaAttr(condition) {\n  return condition ? true : undefined;\n};\nexport var cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nexport function getActiveElement(node) {\n  var doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nexport function contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\nexport function addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    target.removeEventListener(eventName, handler, options);\n  };\n}","map":{"version":3,"sources":["../../src/dom.ts"],"names":["node","getOwnerDocument","window","isBrowser","canUseDOM","dataAttr","condition","ariaAttr","cx","classNames","doc","parent","target"],"mappings":"AAEA,OAAO,SAAA,cAAA,CAAA,IAAA,EAAmD;AAAA,MAAA,qBAAA,EAAA,iBAAA;;AACxD,SAAOA,IAAI,YAAJA,OAAAA,GAAAA,CAAAA,qBAAAA,GAAAA,CAAAA,iBAAAA,GACHC,gBAAgB,CADbD,IACa,CADbA,KAAAA,IAAAA,GAAAA,KAAAA,CAAAA,GACHC,iBAAAA,CADGD,WAAAA,KAAAA,IAAAA,GAAAA,qBAAAA,GAAAA,MAAAA,GAAP,MAAA;AAGD;AAED,OAAO,SAAA,gBAAA,CAAA,IAAA,EAAqD;AAAA,MAAA,mBAAA;;AAC1D,SAAOA,IAAI,YAAJA,OAAAA,GAAAA,CAAAA,mBAAAA,GAA0BA,IAAI,CAA9BA,aAAAA,KAAAA,IAAAA,GAAAA,mBAAAA,GAAAA,QAAAA,GAAP,QAAA;AACD;AAED,OAAO,SAAA,SAAA,GAAqB;AAC1B,SAAO,CAAC,EACN,OAAA,MAAA,KAAA,WAAA,IACAE,MAAM,CADN,QAAA,IAEAA,MAAM,CAANA,QAAAA,CAHF,aAAQ,CAAR;AAKD;AAED,OAAO,IAAMC,SAAS,GAAGC,SAAlB,EAAA;AAEP,OAAO,IAAMC,QAAQ,GAAIC,SAAZD,QAAYC,CAAAA,SAAD;AAAA,SACrBA,SAAS,GAAA,EAAA,GADL,SAAiB;AAAA,CAAjB;AAGP,OAAO,IAAMC,QAAQ,GAAID,SAAZC,QAAYD,CAAAA,SAAD;AAAA,SACtBA,SAAS,GAAA,IAAA,GADJ,SAAiB;AAAA,CAAjB;AAGP,OAAO,IAAME,EAAE,GAAG,SAALA,EAAK,GAAA;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAIC,UAAJ,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAIA,IAAAA,UAAJ,CAAA,IAAA,CAAIA,GAAJ,SAAA,CAAA,IAAA,CAAIA;AAAJ;;AAAA,SAA0BA,UAAU,CAAVA,MAAAA,CAAAA,OAAAA,EAAAA,IAAAA,CAA1B,GAA0BA,CAA1B;AAAX,CAAA;AAEP,OAAO,SAAA,gBAAA,CAAA,IAAA,EAA8C;AACnD,MAAMC,GAAG,GAAGT,gBAAgB,CAA5B,IAA4B,CAA5B;AACA,SAAOS,GAAP,IAAA,IAAOA,GAAP,KAAA,CAAOA,GAAAA,GAAG,CAAV,aAAA;AACD;AAED,OAAO,SAAA,QAAA,CAAA,MAAA,EAAA,KAAA,EAAkE;AACvE,MAAI,CAAJ,MAAA,EAAa,OAAA,KAAA;AACb,SAAOC,MAAM,KAANA,KAAAA,IAAoBA,MAAM,CAANA,QAAAA,CAA3B,KAA2BA,CAA3B;AACD;AAED,OAAO,SAAA,WAAA,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAKL;AACAC,EAAAA,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AACA,SAAO,YAAM;AACXA,IAAAA,MAAM,CAANA,mBAAAA,CAAAA,SAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AADF,GAAA;AAGD","sourcesContent":["import { Booleanish } from \"./types\"\n\nexport function getOwnerWindow(node?: HTMLElement | null) {\n  return node instanceof Element\n    ? getOwnerDocument(node)?.defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: HTMLElement | null) {\n  return node instanceof Element ? node.ownerDocument ?? document : document\n}\n\nexport function canUseDOM() {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = canUseDOM()\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\nexport function addDomEvent(\n  target: EventTarget,\n  eventName: string,\n  handler: EventListener,\n  options?: AddEventListenerOptions,\n) {\n  target.addEventListener(eventName, handler, options)\n  return () => {\n    target.removeEventListener(eventName, handler, options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}