{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\vothb\\\\Desktop\\\\School\\\\Quarter_5\\\\CIS259\\\\Plankcooking-microservices\\\\Plankcooking\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar tls = _interopRequireWildcard(require(\"tls\"));\n\nvar _events = require(\"events\");\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nvar _packet = require(\"./packet\");\n\nvar _incomingMessageStream = _interopRequireDefault(require(\"./incoming-message-stream\"));\n\nvar _outgoingMessageStream = _interopRequireDefault(require(\"./outgoing-message-stream\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar DuplexPair = require('native-duplexpair');\n\nvar MessageIO = /*#__PURE__*/function (_events$EventEmitter) {\n  _inherits(MessageIO, _events$EventEmitter);\n\n  function MessageIO(socket, packetSize, debug) {\n    var _this;\n\n    _classCallCheck(this, MessageIO);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageIO).call(this));\n    _this.socket = void 0;\n    _this.debug = void 0;\n    _this.tlsNegotiationComplete = void 0;\n    _this.incomingMessageStream = void 0;\n    _this.outgoingMessageStream = void 0;\n    _this.securePair = void 0;\n    _this.socket = socket;\n    _this.debug = debug;\n    _this.tlsNegotiationComplete = false;\n    _this.incomingMessageStream = new _incomingMessageStream.default(_this.debug);\n\n    _this.incomingMessageStream.on('data', function (message) {\n      message.on('data', function (chunk) {\n        _this.emit('data', chunk);\n      });\n      message.on('end', function () {\n        _this.emit('message');\n      });\n    });\n\n    _this.outgoingMessageStream = new _outgoingMessageStream.default(_this.debug, {\n      packetSize: packetSize\n    });\n\n    _this.socket.pipe(_this.incomingMessageStream);\n\n    _this.outgoingMessageStream.pipe(_this.socket);\n\n    return _this;\n  }\n\n  _createClass(MessageIO, [{\n    key: \"packetSize\",\n    value: function packetSize() {\n      if (arguments.length > 0) {\n        var packetSize = arguments.length <= 0 ? undefined : arguments[0];\n        this.debug.log('Packet size changed from ' + this.outgoingMessageStream.packetSize + ' to ' + packetSize);\n        this.outgoingMessageStream.packetSize = packetSize;\n      }\n\n      if (this.securePair) {\n        this.securePair.cleartext.setMaxSendFragment(this.outgoingMessageStream.packetSize);\n      }\n\n      return this.outgoingMessageStream.packetSize;\n    }\n  }, {\n    key: \"startTls\",\n    value: function startTls(secureContext, hostname, trustServerCertificate) {\n      var _this2 = this;\n\n      var duplexpair = new DuplexPair();\n      var securePair = this.securePair = {\n        cleartext: tls.connect({\n          socket: duplexpair.socket1,\n          servername: hostname,\n          secureContext: secureContext,\n          rejectUnauthorized: !trustServerCertificate\n        }),\n        encrypted: duplexpair.socket2\n      }; // If an error happens in the TLS layer, there is nothing we can do about it.\n      // Forward the error to the socket so the connection gets properly cleaned up.\n\n      securePair.cleartext.on('error', function (err) {\n        // Streams in node.js versions before 8.0.0 don't support `.destroy`\n        if (typeof securePair.encrypted.destroy === 'function') {\n          securePair.encrypted.destroy();\n        }\n\n        _this2.socket.destroy(err);\n      });\n      securePair.cleartext.on('secureConnect', function () {\n        var cipher = securePair.cleartext.getCipher();\n\n        if (cipher) {\n          _this2.debug.log('TLS negotiated (' + cipher.name + ', ' + cipher.version + ')');\n        }\n\n        _this2.emit('secure', securePair.cleartext);\n\n        _this2.encryptAllFutureTraffic();\n      });\n      securePair.encrypted.on('data', function (data) {\n        _this2.sendMessage(_packet.TYPE.PRELOGIN, data, false);\n      });\n    }\n  }, {\n    key: \"encryptAllFutureTraffic\",\n    value: function encryptAllFutureTraffic() {\n      var securePair = this.securePair;\n      securePair.cleartext.setMaxSendFragment(this.outgoingMessageStream.packetSize);\n      securePair.encrypted.removeAllListeners('data');\n      this.outgoingMessageStream.unpipe(this.socket);\n      this.socket.unpipe(this.incomingMessageStream);\n      this.socket.pipe(securePair.encrypted);\n      securePair.encrypted.pipe(this.socket);\n      securePair.cleartext.pipe(this.incomingMessageStream);\n      this.outgoingMessageStream.pipe(securePair.cleartext);\n      this.tlsNegotiationComplete = true;\n    }\n  }, {\n    key: \"tlsHandshakeData\",\n    value: function tlsHandshakeData(data) {\n      var securePair = this.securePair;\n      securePair.encrypted.write(data);\n    } // TODO listen for 'drain' event when socket.write returns false.\n    // TODO implement incomplete request cancelation (2.2.1.6)\n\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(packetType, data, resetConnection) {\n      var message = new _message.default({\n        type: packetType,\n        resetConnection: resetConnection\n      });\n      message.end(data);\n      this.outgoingMessageStream.write(message);\n      return message;\n    } // Temporarily suspends the flow of incoming packets.\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.incomingMessageStream.pause();\n    } // Resumes the flow of incoming packets.\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.incomingMessageStream.resume();\n    }\n  }]);\n\n  return MessageIO;\n}(_events.EventEmitter);\n\nvar _default = MessageIO;\nexports.default = _default;\nmodule.exports = MessageIO;","map":null,"metadata":{},"sourceType":"script"}