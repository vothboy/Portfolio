{"ast":null,"code":"(function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self, e.JSBI = t());\n})(this, function () {\n  'use strict';\n\n  var v = Math.imul,\n      f = Math.clz32;\n\n  function e(t) {\n    \"@babel/helpers - typeof\";\n\n    return e = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    }, e(t);\n  }\n\n  function t(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function i(e, t) {\n    for (var _, n = 0; n < t.length; n++) {\n      _ = t[n], _.enumerable = _.enumerable || !1, _.configurable = !0, \"value\" in _ && (_.writable = !0), Object.defineProperty(e, _.key, _);\n    }\n  }\n\n  function _(e, t, _) {\n    return t && i(e.prototype, t), _ && i(e, _), e;\n  }\n\n  function n(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && g(e, t);\n  }\n\n  function l(e) {\n    return l = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n      return e.__proto__ || Object.getPrototypeOf(e);\n    }, l(e);\n  }\n\n  function g(e, t) {\n    return g = Object.setPrototypeOf || function (e, t) {\n      return e.__proto__ = t, e;\n    }, g(e, t);\n  }\n\n  function o() {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n\n    try {\n      return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n    } catch (t) {\n      return !1;\n    }\n  }\n\n  function a() {\n    return a = o() ? Reflect.construct : function (e, t, i) {\n      var _ = [null];\n\n      _.push.apply(_, t);\n\n      var n = Function.bind.apply(e, _),\n          l = new n();\n      return i && g(l, i.prototype), l;\n    }, a.apply(null, arguments);\n  }\n\n  function s(e) {\n    return -1 !== Function.toString.call(e).indexOf(\"[native code]\");\n  }\n\n  function u(e) {\n    var t = \"function\" == typeof Map ? new Map() : void 0;\n    return u = function u(e) {\n      function i() {\n        return a(e, arguments, l(this).constructor);\n      }\n\n      if (null === e || !s(e)) return e;\n      if (\"function\" != typeof e) throw new TypeError(\"Super expression must either be null or a function\");\n\n      if (\"undefined\" != typeof t) {\n        if (t.has(e)) return t.get(e);\n        t.set(e, i);\n      }\n\n      return i.prototype = Object.create(e.prototype, {\n        constructor: {\n          value: i,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), g(i, e);\n    }, u(e);\n  }\n\n  function r(e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }\n\n  function d(e, t) {\n    return t && (\"object\" == typeof t || \"function\" == typeof t) ? t : r(e);\n  }\n\n  function h(e) {\n    var t = o();\n    return function () {\n      var i,\n          _ = l(e);\n\n      if (t) {\n        var n = l(this).constructor;\n        i = Reflect.construct(_, arguments, n);\n      } else i = _.apply(this, arguments);\n\n      return d(this, i);\n    };\n  }\n\n  function b(e, t) {\n    if (e) {\n      if (\"string\" == typeof e) return m(e, t);\n      var i = Object.prototype.toString.call(e).slice(8, -1);\n      return \"Object\" === i && e.constructor && (i = e.constructor.name), \"Map\" === i || \"Set\" === i ? Array.from(e) : \"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? m(e, t) : void 0;\n    }\n  }\n\n  function m(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n\n    for (var _ = 0, n = Array(t); _ < t; _++) {\n      n[_] = e[_];\n    }\n\n    return n;\n  }\n\n  function c(e, t) {\n    var _;\n\n    if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n      if (Array.isArray(e) || (_ = b(e)) || t && e && \"number\" == typeof e.length) {\n        _ && (e = _);\n\n        var _n = 0,\n            l = function l() {};\n\n        return {\n          s: l,\n          n: function n() {\n            return _n >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[_n++]\n            };\n          },\n          e: function e(t) {\n            throw t;\n          },\n          f: l\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var g,\n        a = !0,\n        s = !1;\n    return {\n      s: function s() {\n        _ = e[Symbol.iterator]();\n      },\n      n: function n() {\n        var e = _.next();\n\n        return a = e.done, e;\n      },\n      e: function e(t) {\n        s = !0, g = t;\n      },\n      f: function f() {\n        try {\n          a || null == _.return || _.return();\n        } finally {\n          if (s) throw g;\n        }\n      }\n    };\n  }\n\n  var y = function (i) {\n    var g = Math.abs,\n        o = Math.max;\n\n    function l(e, i) {\n      var _;\n\n      if (t(this, l), e > l.__kMaxLength) throw new RangeError(\"Maximum BigInt size exceeded\");\n      return _ = a.call(this, e), _.sign = i, _;\n    }\n\n    n(l, i);\n    var a = h(l);\n    return _(l, [{\n      key: \"toDebugString\",\n      value: function value() {\n        var e,\n            t = [\"BigInt[\"],\n            i = c(this);\n\n        try {\n          for (i.s(); !(e = i.n()).done;) {\n            var _ = e.value;\n            t.push((_ ? (_ >>> 0).toString(16) : _) + \", \");\n          }\n        } catch (e) {\n          i.e(e);\n        } finally {\n          i.f();\n        }\n\n        return t.push(\"]\"), t.join(\"\");\n      }\n    }, {\n      key: \"toString\",\n      value: function value() {\n        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 10;\n        if (2 > e || 36 < e) throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n        return 0 === this.length ? \"0\" : 0 == (e & e - 1) ? l.__toStringBasePowerOfTwo(this, e) : l.__toStringGeneric(this, e, !1);\n      }\n    }, {\n      key: \"__copy\",\n      value: function value() {\n        for (var e = new l(this.length, this.sign), t = 0; t < this.length; t++) {\n          e[t] = this[t];\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__trim\",\n      value: function value() {\n        for (var e = this.length, t = this[e - 1]; 0 === t;) {\n          e--, t = this[e - 1], this.pop();\n        }\n\n        return 0 === e && (this.sign = !1), this;\n      }\n    }, {\n      key: \"__initializeDigits\",\n      value: function value() {\n        for (var e = 0; e < this.length; e++) {\n          this[e] = 0;\n        }\n      }\n    }, {\n      key: \"__clzmsd\",\n      value: function value() {\n        return l.__clz32(this[this.length - 1]);\n      }\n    }, {\n      key: \"__inplaceMultiplyAdd\",\n      value: function value(e, t, _) {\n        _ > this.length && (_ = this.length);\n\n        for (var n = 65535 & e, g = e >>> 16, o = 0, a = 65535 & t, s = t >>> 16, u = 0; u < _; u++) {\n          var r = this.__digit(u),\n              d = 65535 & r,\n              h = r >>> 16,\n              b = l.__imul(d, n),\n              m = l.__imul(d, g),\n              c = l.__imul(h, n),\n              v = l.__imul(h, g),\n              f = a + (65535 & b),\n              y = s + o + (f >>> 16) + (b >>> 16) + (65535 & m) + (65535 & c);\n\n          a = (m >>> 16) + (c >>> 16) + (65535 & v) + (y >>> 16), o = a >>> 16, a &= 65535, s = v >>> 16;\n\n          this.__setDigit(u, 65535 & f | y << 16);\n        }\n\n        if (0 !== o || 0 !== a || 0 !== s) throw new Error(\"implementation bug\");\n      }\n    }, {\n      key: \"__inplaceAdd\",\n      value: function value(e, t, _) {\n        for (var n, l = 0, g = 0; g < _; g++) {\n          n = this.__halfDigit(t + g) + e.__halfDigit(g) + l, l = n >>> 16, this.__setHalfDigit(t + g, n);\n        }\n\n        return l;\n      }\n    }, {\n      key: \"__inplaceSub\",\n      value: function value(e, t, _) {\n        var n = 0;\n\n        if (1 & t) {\n          t >>= 1;\n\n          for (var l = this.__digit(t), g = 65535 & l, o = 0; o < _ - 1 >>> 1; o++) {\n            var a = e.__digit(o),\n                s = (l >>> 16) - (65535 & a) - n;\n\n            n = 1 & s >>> 16, this.__setDigit(t + o, s << 16 | 65535 & g), l = this.__digit(t + o + 1), g = (65535 & l) - (a >>> 16) - n, n = 1 & g >>> 16;\n          }\n\n          var u = e.__digit(o),\n              r = (l >>> 16) - (65535 & u) - n;\n\n          n = 1 & r >>> 16, this.__setDigit(t + o, r << 16 | 65535 & g);\n          if (t + o + 1 >= this.length) throw new RangeError(\"out of bounds\");\n          0 == (1 & _) && (l = this.__digit(t + o + 1), g = (65535 & l) - (u >>> 16) - n, n = 1 & g >>> 16, this.__setDigit(t + e.length, 4294901760 & l | 65535 & g));\n        } else {\n          t >>= 1;\n\n          for (var d = 0; d < e.length - 1; d++) {\n            var h = this.__digit(t + d),\n                b = e.__digit(d),\n                m = (65535 & h) - (65535 & b) - n;\n\n            n = 1 & m >>> 16;\n            var c = (h >>> 16) - (b >>> 16) - n;\n            n = 1 & c >>> 16, this.__setDigit(t + d, c << 16 | 65535 & m);\n          }\n\n          var v = this.__digit(t + d),\n              f = e.__digit(d),\n              y = (65535 & v) - (65535 & f) - n;\n\n          n = 1 & y >>> 16;\n          var k = 0;\n          0 == (1 & _) && (k = (v >>> 16) - (f >>> 16) - n, n = 1 & k >>> 16), this.__setDigit(t + d, k << 16 | 65535 & y);\n        }\n\n        return n;\n      }\n    }, {\n      key: \"__inplaceRightShift\",\n      value: function value(e) {\n        if (0 !== e) {\n          for (var t, _ = this.__digit(0) >>> e, n = this.length - 1, l = 0; l < n; l++) {\n            t = this.__digit(l + 1), this.__setDigit(l, t << 32 - e | _), _ = t >>> e;\n          }\n\n          this.__setDigit(n, _);\n        }\n      }\n    }, {\n      key: \"__digit\",\n      value: function value(e) {\n        return this[e];\n      }\n    }, {\n      key: \"__unsignedDigit\",\n      value: function value(e) {\n        return this[e] >>> 0;\n      }\n    }, {\n      key: \"__setDigit\",\n      value: function value(e, t) {\n        this[e] = 0 | t;\n      }\n    }, {\n      key: \"__setDigitGrow\",\n      value: function value(e, t) {\n        this[e] = 0 | t;\n      }\n    }, {\n      key: \"__halfDigitLength\",\n      value: function value() {\n        var e = this.length;\n        return 65535 >= this.__unsignedDigit(e - 1) ? 2 * e - 1 : 2 * e;\n      }\n    }, {\n      key: \"__halfDigit\",\n      value: function value(e) {\n        return 65535 & this[e >>> 1] >>> ((1 & e) << 4);\n      }\n    }, {\n      key: \"__setHalfDigit\",\n      value: function value(e, t) {\n        var i = e >>> 1,\n            _ = this.__digit(i),\n            n = 1 & e ? 65535 & _ | t << 16 : 4294901760 & _ | 65535 & t;\n\n        this.__setDigit(i, n);\n      }\n    }], [{\n      key: \"BigInt\",\n      value: function value(t) {\n        var i = Math.floor,\n            _ = Number.isFinite;\n\n        if (\"number\" == typeof t) {\n          if (0 === t) return l.__zero();\n          if ((0 | t) === t) return 0 > t ? l.__oneDigit(-t, !0) : l.__oneDigit(t, !1);\n          if (!_(t) || i(t) !== t) throw new RangeError(\"The number \" + t + \" cannot be converted to BigInt because it is not an integer\");\n          return l.__fromDouble(t);\n        }\n\n        if (\"string\" == typeof t) {\n          var n = l.__fromString(t);\n\n          if (null === n) throw new SyntaxError(\"Cannot convert \" + t + \" to a BigInt\");\n          return n;\n        }\n\n        if (\"boolean\" == typeof t) return !0 === t ? l.__oneDigit(1, !1) : l.__zero();\n\n        if (\"object\" === e(t)) {\n          if (t.constructor === l) return t;\n\n          var g = l.__toPrimitive(t);\n\n          return l.BigInt(g);\n        }\n\n        throw new TypeError(\"Cannot convert \" + t + \" to a BigInt\");\n      }\n    }, {\n      key: \"toNumber\",\n      value: function value(e) {\n        var t = e.length;\n        if (0 === t) return 0;\n\n        if (1 === t) {\n          var i = e.__unsignedDigit(0);\n\n          return e.sign ? -i : i;\n        }\n\n        var _ = e.__digit(t - 1),\n            n = l.__clz32(_),\n            g = 32 * t - n;\n\n        if (1024 < g) return e.sign ? -Infinity : 1 / 0;\n        var o = g - 1,\n            a = _,\n            s = t - 1,\n            u = n + 1,\n            r = 32 === u ? 0 : a << u;\n        r >>>= 12;\n        var d = u - 12,\n            h = 12 <= u ? 0 : a << 20 + u,\n            b = 20 + u;\n        0 < d && 0 < s && (s--, a = e.__digit(s), r |= a >>> 32 - d, h = a << d, b = d), 0 < b && 0 < s && (s--, a = e.__digit(s), h |= a >>> 32 - b, b -= 32);\n\n        var m = l.__decideRounding(e, b, s, a);\n\n        if ((1 === m || 0 === m && 1 == (1 & h)) && (h = h + 1 >>> 0, 0 === h && (r++, 0 != r >>> 20 && (r = 0, o++, 1023 < o)))) return e.sign ? -Infinity : 1 / 0;\n        var c = e.sign ? -2147483648 : 0;\n        return o = o + 1023 << 20, l.__kBitConversionInts[1] = c | o | r, l.__kBitConversionInts[0] = h, l.__kBitConversionDouble[0];\n      }\n    }, {\n      key: \"unaryMinus\",\n      value: function value(e) {\n        if (0 === e.length) return e;\n\n        var t = e.__copy();\n\n        return t.sign = !e.sign, t;\n      }\n    }, {\n      key: \"bitwiseNot\",\n      value: function value(e) {\n        return e.sign ? l.__absoluteSubOne(e).__trim() : l.__absoluteAddOne(e, !0);\n      }\n    }, {\n      key: \"exponentiate\",\n      value: function value(e, t) {\n        if (t.sign) throw new RangeError(\"Exponent must be positive\");\n        if (0 === t.length) return l.__oneDigit(1, !1);\n        if (0 === e.length) return e;\n        if (1 === e.length && 1 === e.__digit(0)) return e.sign && 0 == (1 & t.__digit(0)) ? l.unaryMinus(e) : e;\n        if (1 < t.length) throw new RangeError(\"BigInt too big\");\n\n        var i = t.__unsignedDigit(0);\n\n        if (1 === i) return e;\n        if (i >= l.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n\n        if (1 === e.length && 2 === e.__digit(0)) {\n          var _ = 1 + (i >>> 5),\n              n = e.sign && 0 != (1 & i),\n              g = new l(_, n);\n\n          g.__initializeDigits();\n\n          var o = 1 << (31 & i);\n          return g.__setDigit(_ - 1, o), g;\n        }\n\n        var a = null,\n            s = e;\n\n        for (0 != (1 & i) && (a = e), i >>= 1; 0 !== i; i >>= 1) {\n          s = l.multiply(s, s), 0 != (1 & i) && (null === a ? a = s : a = l.multiply(a, s));\n        }\n\n        return a;\n      }\n    }, {\n      key: \"multiply\",\n      value: function value(e, t) {\n        if (0 === e.length) return e;\n        if (0 === t.length) return t;\n\n        var _ = e.length + t.length;\n\n        32 <= e.__clzmsd() + t.__clzmsd() && _--;\n        var n = new l(_, e.sign !== t.sign);\n\n        n.__initializeDigits();\n\n        for (var g = 0; g < e.length; g++) {\n          l.__multiplyAccumulate(t, e.__digit(g), n, g);\n        }\n\n        return n.__trim();\n      }\n    }, {\n      key: \"divide\",\n      value: function value(e, t) {\n        if (0 === t.length) throw new RangeError(\"Division by zero\");\n        if (0 > l.__absoluteCompare(e, t)) return l.__zero();\n\n        var i,\n            _ = e.sign !== t.sign,\n            n = t.__unsignedDigit(0);\n\n        if (1 === t.length && 65535 >= n) {\n          if (1 === n) return _ === e.sign ? e : l.unaryMinus(e);\n          i = l.__absoluteDivSmall(e, n, null);\n        } else i = l.__absoluteDivLarge(e, t, !0, !1);\n\n        return i.sign = _, i.__trim();\n      }\n    }, {\n      key: \"remainder\",\n      value: function e(t, i) {\n        if (0 === i.length) throw new RangeError(\"Division by zero\");\n        if (0 > l.__absoluteCompare(t, i)) return t;\n\n        var _ = i.__unsignedDigit(0);\n\n        if (1 === i.length && 65535 >= _) {\n          if (1 === _) return l.__zero();\n\n          var n = l.__absoluteModSmall(t, _);\n\n          return 0 === n ? l.__zero() : l.__oneDigit(n, t.sign);\n        }\n\n        var e = l.__absoluteDivLarge(t, i, !1, !0);\n\n        return e.sign = t.sign, e.__trim();\n      }\n    }, {\n      key: \"add\",\n      value: function value(e, t) {\n        var i = e.sign;\n        return i === t.sign ? l.__absoluteAdd(e, t, i) : 0 <= l.__absoluteCompare(e, t) ? l.__absoluteSub(e, t, i) : l.__absoluteSub(t, e, !i);\n      }\n    }, {\n      key: \"subtract\",\n      value: function value(e, t) {\n        var i = e.sign;\n        return i === t.sign ? 0 <= l.__absoluteCompare(e, t) ? l.__absoluteSub(e, t, i) : l.__absoluteSub(t, e, !i) : l.__absoluteAdd(e, t, i);\n      }\n    }, {\n      key: \"leftShift\",\n      value: function value(e, t) {\n        return 0 === t.length || 0 === e.length ? e : t.sign ? l.__rightShiftByAbsolute(e, t) : l.__leftShiftByAbsolute(e, t);\n      }\n    }, {\n      key: \"signedRightShift\",\n      value: function value(e, t) {\n        return 0 === t.length || 0 === e.length ? e : t.sign ? l.__leftShiftByAbsolute(e, t) : l.__rightShiftByAbsolute(e, t);\n      }\n    }, {\n      key: \"unsignedRightShift\",\n      value: function value() {\n        throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n      }\n    }, {\n      key: \"lessThan\",\n      value: function value(e, t) {\n        return 0 > l.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"lessThanOrEqual\",\n      value: function value(e, t) {\n        return 0 >= l.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"greaterThan\",\n      value: function value(e, t) {\n        return 0 < l.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"greaterThanOrEqual\",\n      value: function value(e, t) {\n        return 0 <= l.__compareToBigInt(e, t);\n      }\n    }, {\n      key: \"equal\",\n      value: function value(e, t) {\n        if (e.sign !== t.sign) return !1;\n        if (e.length !== t.length) return !1;\n\n        for (var _ = 0; _ < e.length; _++) {\n          if (e.__digit(_) !== t.__digit(_)) return !1;\n        }\n\n        return !0;\n      }\n    }, {\n      key: \"notEqual\",\n      value: function value(e, t) {\n        return !l.equal(e, t);\n      }\n    }, {\n      key: \"bitwiseAnd\",\n      value: function value(e, t) {\n        if (!e.sign && !t.sign) return l.__absoluteAnd(e, t).__trim();\n\n        if (e.sign && t.sign) {\n          var i = o(e.length, t.length) + 1,\n              _ = l.__absoluteSubOne(e, i),\n              n = l.__absoluteSubOne(t);\n\n          return _ = l.__absoluteOr(_, n, _), l.__absoluteAddOne(_, !0, _).__trim();\n        }\n\n        if (e.sign) {\n          var g = [t, e];\n          e = g[0], t = g[1];\n        }\n\n        return l.__absoluteAndNot(e, l.__absoluteSubOne(t)).__trim();\n      }\n    }, {\n      key: \"bitwiseXor\",\n      value: function value(e, t) {\n        if (!e.sign && !t.sign) return l.__absoluteXor(e, t).__trim();\n\n        if (e.sign && t.sign) {\n          var i = o(e.length, t.length),\n              _ = l.__absoluteSubOne(e, i),\n              n = l.__absoluteSubOne(t);\n\n          return l.__absoluteXor(_, n, _).__trim();\n        }\n\n        var g = o(e.length, t.length) + 1;\n\n        if (e.sign) {\n          var a = [t, e];\n          e = a[0], t = a[1];\n        }\n\n        var s = l.__absoluteSubOne(t, g);\n\n        return s = l.__absoluteXor(s, e, s), l.__absoluteAddOne(s, !0, s).__trim();\n      }\n    }, {\n      key: \"bitwiseOr\",\n      value: function value(e, t) {\n        var i = o(e.length, t.length);\n        if (!e.sign && !t.sign) return l.__absoluteOr(e, t).__trim();\n\n        if (e.sign && t.sign) {\n          var _ = l.__absoluteSubOne(e, i),\n              n = l.__absoluteSubOne(t);\n\n          return _ = l.__absoluteAnd(_, n, _), l.__absoluteAddOne(_, !0, _).__trim();\n        }\n\n        if (e.sign) {\n          var g = [t, e];\n          e = g[0], t = g[1];\n        }\n\n        var a = l.__absoluteSubOne(t, i);\n\n        return a = l.__absoluteAndNot(a, e, a), l.__absoluteAddOne(a, !0, a).__trim();\n      }\n    }, {\n      key: \"asIntN\",\n      value: function value(e, t) {\n        if (0 === t.length) return t;\n        if (0 === e) return l.__zero();\n        if (e >= l.__kMaxLengthBits) return t;\n\n        var _ = e + 31 >>> 5;\n\n        if (t.length < _) return t;\n\n        var n = t.__unsignedDigit(_ - 1),\n            g = 1 << (31 & e - 1);\n\n        if (t.length === _ && n < g) return t;\n        if (!((n & g) === g)) return l.__truncateToNBits(e, t);\n        if (!t.sign) return l.__truncateAndSubFromPowerOfTwo(e, t, !0);\n\n        if (0 == (n & g - 1)) {\n          for (var o = _ - 2; 0 <= o; o--) {\n            if (0 !== t.__digit(o)) return l.__truncateAndSubFromPowerOfTwo(e, t, !1);\n          }\n\n          return t.length === _ && n === g ? t : l.__truncateToNBits(e, t);\n        }\n\n        return l.__truncateAndSubFromPowerOfTwo(e, t, !1);\n      }\n    }, {\n      key: \"asUintN\",\n      value: function value(e, t) {\n        if (0 === t.length) return t;\n        if (0 === e) return l.__zero();\n\n        if (t.sign) {\n          if (e > l.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n          return l.__truncateAndSubFromPowerOfTwo(e, t, !1);\n        }\n\n        if (e >= l.__kMaxLengthBits) return t;\n        var i = e + 31 >>> 5;\n        if (t.length < i) return t;\n\n        var _ = 31 & e;\n\n        if (t.length == i) {\n          if (0 === _) return t;\n\n          var n = t.__digit(i - 1);\n\n          if (0 == n >>> _) return t;\n        }\n\n        return l.__truncateToNBits(e, t);\n      }\n    }, {\n      key: \"ADD\",\n      value: function value(e, t) {\n        if (e = l.__toPrimitive(e), t = l.__toPrimitive(t), \"string\" == typeof e) return \"string\" != typeof t && (t = t.toString()), e + t;\n        if (\"string\" == typeof t) return e.toString() + t;\n        if (e = l.__toNumeric(e), t = l.__toNumeric(t), l.__isBigInt(e) && l.__isBigInt(t)) return l.add(e, t);\n        if (\"number\" == typeof e && \"number\" == typeof t) return e + t;\n        throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n      }\n    }, {\n      key: \"LT\",\n      value: function value(e, t) {\n        return l.__compare(e, t, 0);\n      }\n    }, {\n      key: \"LE\",\n      value: function value(e, t) {\n        return l.__compare(e, t, 1);\n      }\n    }, {\n      key: \"GT\",\n      value: function value(e, t) {\n        return l.__compare(e, t, 2);\n      }\n    }, {\n      key: \"GE\",\n      value: function value(e, t) {\n        return l.__compare(e, t, 3);\n      }\n    }, {\n      key: \"EQ\",\n      value: function value(t, i) {\n        for (;;) {\n          if (l.__isBigInt(t)) return l.__isBigInt(i) ? l.equal(t, i) : l.EQ(i, t);\n\n          if (\"number\" == typeof t) {\n            if (l.__isBigInt(i)) return l.__equalToNumber(i, t);\n            if (\"object\" !== e(i)) return t == i;\n            i = l.__toPrimitive(i);\n          } else if (\"string\" == typeof t) {\n            if (l.__isBigInt(i)) return t = l.__fromString(t), null !== t && l.equal(t, i);\n            if (\"object\" !== e(i)) return t == i;\n            i = l.__toPrimitive(i);\n          } else if (\"boolean\" == typeof t) {\n            if (l.__isBigInt(i)) return l.__equalToNumber(i, +t);\n            if (\"object\" !== e(i)) return t == i;\n            i = l.__toPrimitive(i);\n          } else if (\"symbol\" === e(t)) {\n            if (l.__isBigInt(i)) return !1;\n            if (\"object\" !== e(i)) return t == i;\n            i = l.__toPrimitive(i);\n          } else if (\"object\" === e(t)) {\n            if (\"object\" === e(i) && i.constructor !== l) return t == i;\n            t = l.__toPrimitive(t);\n          } else return t == i;\n        }\n      }\n    }, {\n      key: \"NE\",\n      value: function value(e, t) {\n        return !l.EQ(e, t);\n      }\n    }, {\n      key: \"__zero\",\n      value: function value() {\n        return new l(0, !1);\n      }\n    }, {\n      key: \"__oneDigit\",\n      value: function value(e, t) {\n        var i = new l(1, t);\n        return i.__setDigit(0, e), i;\n      }\n    }, {\n      key: \"__decideRounding\",\n      value: function value(e, t, i, _) {\n        if (0 < t) return -1;\n        var n;\n        if (0 > t) n = -t - 1;else {\n          if (0 === i) return -1;\n          i--, _ = e.__digit(i), n = 31;\n        }\n        var l = 1 << n;\n        if (0 == (_ & l)) return -1;\n        if (l -= 1, 0 != (_ & l)) return 1;\n\n        for (; 0 < i;) {\n          if (i--, 0 !== e.__digit(i)) return 1;\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"__fromDouble\",\n      value: function value(e) {\n        l.__kBitConversionDouble[0] = e;\n\n        var t,\n            i = 2047 & l.__kBitConversionInts[1] >>> 20,\n            _ = i - 1023,\n            n = (_ >>> 5) + 1,\n            g = new l(n, 0 > e),\n            o = 1048575 & l.__kBitConversionInts[1] | 1048576,\n            a = l.__kBitConversionInts[0],\n            s = 20,\n            u = 31 & _,\n            r = 0;\n\n        if (u < s) {\n          var d = s - u;\n          r = d + 32, t = o >>> d, o = o << 32 - d | a >>> d, a <<= 32 - d;\n        } else if (u === s) r = 32, t = o, o = a;else {\n          var h = u - s;\n          r = 32 - h, t = o << h | a >>> 32 - h, o = a << h;\n        }\n\n        g.__setDigit(n - 1, t);\n\n        for (var b = n - 2; 0 <= b; b--) {\n          0 < r ? (r -= 32, t = o, o = a) : t = 0, g.__setDigit(b, t);\n        }\n\n        return g.__trim();\n      }\n    }, {\n      key: \"__isWhitespace\",\n      value: function value(e) {\n        return !!(13 >= e && 9 <= e) || (159 >= e ? 32 == e : 131071 >= e ? 160 == e || 5760 == e : 196607 >= e ? (e &= 131071, 10 >= e || 40 == e || 41 == e || 47 == e || 95 == e || 4096 == e) : 65279 == e);\n      }\n    }, {\n      key: \"__fromString\",\n      value: function value(e) {\n        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0,\n            i = 0,\n            _ = e.length,\n            n = 0;\n        if (n === _) return l.__zero();\n\n        for (var g = e.charCodeAt(n); l.__isWhitespace(g);) {\n          if (++n === _) return l.__zero();\n          g = e.charCodeAt(n);\n        }\n\n        if (43 === g) {\n          if (++n === _) return null;\n          g = e.charCodeAt(n), i = 1;\n        } else if (45 === g) {\n          if (++n === _) return null;\n          g = e.charCodeAt(n), i = -1;\n        }\n\n        if (0 === t) {\n          if (t = 10, 48 === g) {\n            if (++n === _) return l.__zero();\n\n            if (g = e.charCodeAt(n), 88 === g || 120 === g) {\n              if (t = 16, ++n === _) return null;\n              g = e.charCodeAt(n);\n            } else if (79 === g || 111 === g) {\n              if (t = 8, ++n === _) return null;\n              g = e.charCodeAt(n);\n            } else if (66 === g || 98 === g) {\n              if (t = 2, ++n === _) return null;\n              g = e.charCodeAt(n);\n            }\n          }\n        } else if (16 === t && 48 === g) {\n          if (++n === _) return l.__zero();\n\n          if (g = e.charCodeAt(n), 88 === g || 120 === g) {\n            if (++n === _) return null;\n            g = e.charCodeAt(n);\n          }\n        }\n\n        for (; 48 === g;) {\n          if (++n === _) return l.__zero();\n          g = e.charCodeAt(n);\n        }\n\n        var o = _ - n,\n            a = l.__kMaxBitsPerChar[t],\n            s = l.__kBitsPerCharTableMultiplier - 1;\n        if (o > 1073741824 / a) return null;\n        var u = a * o + s >>> l.__kBitsPerCharTableShift,\n            r = new l(u + 31 >>> 5, !1),\n            h = 10 > t ? t : 10,\n            b = 10 < t ? t - 10 : 0;\n\n        if (0 == (t & t - 1)) {\n          a >>= l.__kBitsPerCharTableShift;\n          var c = [],\n              v = [],\n              f = !1;\n\n          do {\n            for (var y, k = 0, D = 0;;) {\n              if (y = void 0, g - 48 >>> 0 < h) y = g - 48;else if ((32 | g) - 97 >>> 0 < b) y = (32 | g) - 87;else {\n                f = !0;\n                break;\n              }\n\n              if (D += a, k = k << a | y, ++n === _) {\n                f = !0;\n                break;\n              }\n\n              if (g = e.charCodeAt(n), 32 < D + a) break;\n            }\n\n            c.push(k), v.push(D);\n          } while (!f);\n\n          l.__fillFromParts(r, c, v);\n        } else {\n          r.__initializeDigits();\n\n          var p = !1,\n              B = 0;\n\n          do {\n            for (var S, C = 0, A = 1;;) {\n              if (S = void 0, g - 48 >>> 0 < h) S = g - 48;else if ((32 | g) - 97 >>> 0 < b) S = (32 | g) - 87;else {\n                p = !0;\n                break;\n              }\n              var T = A * t;\n              if (4294967295 < T) break;\n\n              if (A = T, C = C * t + S, B++, ++n === _) {\n                p = !0;\n                break;\n              }\n\n              g = e.charCodeAt(n);\n            }\n\n            s = 32 * l.__kBitsPerCharTableMultiplier - 1;\n            var m = a * B + s >>> l.__kBitsPerCharTableShift + 5;\n\n            r.__inplaceMultiplyAdd(A, C, m);\n          } while (!p);\n        }\n\n        if (n !== _) {\n          if (!l.__isWhitespace(g)) return null;\n\n          for (n++; n < _; n++) {\n            if (g = e.charCodeAt(n), !l.__isWhitespace(g)) return null;\n          }\n        }\n\n        return 0 !== i && 10 !== t ? null : (r.sign = -1 === i, r.__trim());\n      }\n    }, {\n      key: \"__fillFromParts\",\n      value: function value(e, t, _) {\n        for (var n = 0, l = 0, g = 0, o = t.length - 1; 0 <= o; o--) {\n          var a = t[o],\n              s = _[o];\n          l |= a << g, g += s, 32 === g ? (e.__setDigit(n++, l), g = 0, l = 0) : 32 < g && (e.__setDigit(n++, l), g -= 32, l = a >>> s - g);\n        }\n\n        if (0 !== l) {\n          if (n >= e.length) throw new Error(\"implementation bug\");\n\n          e.__setDigit(n++, l);\n        }\n\n        for (; n < e.length; n++) {\n          e.__setDigit(n, 0);\n        }\n      }\n    }, {\n      key: \"__toStringBasePowerOfTwo\",\n      value: function value(e, t) {\n        var _ = e.length,\n            n = t - 1;\n        n = (85 & n >>> 1) + (85 & n), n = (51 & n >>> 2) + (51 & n), n = (15 & n >>> 4) + (15 & n);\n\n        var g = n,\n            o = t - 1,\n            a = e.__digit(_ - 1),\n            s = l.__clz32(a),\n            u = 0 | (32 * _ - s + g - 1) / g;\n\n        if (e.sign && u++, 268435456 < u) throw new Error(\"string too long\");\n\n        for (var r = Array(u), d = u - 1, h = 0, b = 0, m = 0; m < _ - 1; m++) {\n          var c = e.__digit(m),\n              v = (h | c << b) & o;\n\n          r[d--] = l.__kConversionChars[v];\n          var f = g - b;\n\n          for (h = c >>> f, b = 32 - f; b >= g;) {\n            r[d--] = l.__kConversionChars[h & o], h >>>= g, b -= g;\n          }\n        }\n\n        var y = (h | a << b) & o;\n\n        for (r[d--] = l.__kConversionChars[y], h = a >>> g - b; 0 !== h;) {\n          r[d--] = l.__kConversionChars[h & o], h >>>= g;\n        }\n\n        if (e.sign && (r[d--] = \"-\"), -1 !== d) throw new Error(\"implementation bug\");\n        return r.join(\"\");\n      }\n    }, {\n      key: \"__toStringGeneric\",\n      value: function value(e, t, _) {\n        var n = e.length;\n        if (0 === n) return \"\";\n\n        if (1 === n) {\n          var g = e.__unsignedDigit(0).toString(t);\n\n          return !1 === _ && e.sign && (g = \"-\" + g), g;\n        }\n\n        var o = 32 * n - l.__clz32(e.__digit(n - 1)),\n            a = l.__kMaxBitsPerChar[t],\n            s = a - 1,\n            u = o * l.__kBitsPerCharTableMultiplier;\n\n        u += s - 1, u = 0 | u / s;\n\n        var r,\n            d,\n            h = u + 1 >> 1,\n            b = l.exponentiate(l.__oneDigit(t, !1), l.__oneDigit(h, !1)),\n            m = b.__unsignedDigit(0);\n\n        if (1 === b.length && 65535 >= m) {\n          r = new l(e.length, !1), r.__initializeDigits();\n\n          for (var c, v = 0, f = 2 * e.length - 1; 0 <= f; f--) {\n            c = v << 16 | e.__halfDigit(f), r.__setHalfDigit(f, 0 | c / m), v = 0 | c % m;\n          }\n\n          d = v.toString(t);\n        } else {\n          var y = l.__absoluteDivLarge(e, b, !0, !0);\n\n          r = y.quotient;\n\n          var k = y.remainder.__trim();\n\n          d = l.__toStringGeneric(k, t, !0);\n        }\n\n        r.__trim();\n\n        for (var D = l.__toStringGeneric(r, t, !0); d.length < h;) {\n          d = \"0\" + d;\n        }\n\n        return !1 === _ && e.sign && (D = \"-\" + D), D + d;\n      }\n    }, {\n      key: \"__unequalSign\",\n      value: function value(e) {\n        return e ? -1 : 1;\n      }\n    }, {\n      key: \"__absoluteGreater\",\n      value: function value(e) {\n        return e ? -1 : 1;\n      }\n    }, {\n      key: \"__absoluteLess\",\n      value: function value(e) {\n        return e ? 1 : -1;\n      }\n    }, {\n      key: \"__compareToBigInt\",\n      value: function value(e, t) {\n        var i = e.sign;\n        if (i !== t.sign) return l.__unequalSign(i);\n\n        var _ = l.__absoluteCompare(e, t);\n\n        return 0 < _ ? l.__absoluteGreater(i) : 0 > _ ? l.__absoluteLess(i) : 0;\n      }\n    }, {\n      key: \"__compareToNumber\",\n      value: function value(e, t) {\n        if (!0 | t) {\n          var i = e.sign,\n              _ = 0 > t;\n\n          if (i !== _) return l.__unequalSign(i);\n\n          if (0 === e.length) {\n            if (_) throw new Error(\"implementation bug\");\n            return 0 === t ? 0 : -1;\n          }\n\n          if (1 < e.length) return l.__absoluteGreater(i);\n\n          var n = g(t),\n              o = e.__unsignedDigit(0);\n\n          return o > n ? l.__absoluteGreater(i) : o < n ? l.__absoluteLess(i) : 0;\n        }\n\n        return l.__compareToDouble(e, t);\n      }\n    }, {\n      key: \"__compareToDouble\",\n      value: function value(e, t) {\n        if (t !== t) return t;\n        if (t === 1 / 0) return -1;\n        if (t === -Infinity) return 1;\n        var i = e.sign;\n        if (i !== 0 > t) return l.__unequalSign(i);\n        if (0 === t) throw new Error(\"implementation bug: should be handled elsewhere\");\n        if (0 === e.length) return -1;\n        l.__kBitConversionDouble[0] = t;\n\n        var _ = 2047 & l.__kBitConversionInts[1] >>> 20;\n\n        if (2047 == _) throw new Error(\"implementation bug: handled elsewhere\");\n        var n = _ - 1023;\n        if (0 > n) return l.__absoluteGreater(i);\n\n        var g = e.length,\n            o = e.__digit(g - 1),\n            a = l.__clz32(o),\n            s = 32 * g - a,\n            u = n + 1;\n\n        if (s < u) return l.__absoluteLess(i);\n        if (s > u) return l.__absoluteGreater(i);\n        var r = 1048576 | 1048575 & l.__kBitConversionInts[1],\n            d = l.__kBitConversionInts[0],\n            h = 20,\n            b = 31 - a;\n        if (b !== (s - 1) % 31) throw new Error(\"implementation bug\");\n        var m,\n            c = 0;\n\n        if (b < h) {\n          var v = h - b;\n          c = v + 32, m = r >>> v, r = r << 32 - v | d >>> v, d <<= 32 - v;\n        } else if (b === h) c = 32, m = r, r = d;else {\n          var f = b - h;\n          c = 32 - f, m = r << f | d >>> 32 - f, r = d << f;\n        }\n\n        if (o >>>= 0, m >>>= 0, o > m) return l.__absoluteGreater(i);\n        if (o < m) return l.__absoluteLess(i);\n\n        for (var y = g - 2; 0 <= y; y--) {\n          0 < c ? (c -= 32, m = r >>> 0, r = d, d = 0) : m = 0;\n\n          var k = e.__unsignedDigit(y);\n\n          if (k > m) return l.__absoluteGreater(i);\n          if (k < m) return l.__absoluteLess(i);\n        }\n\n        if (0 !== r || 0 !== d) {\n          if (0 === c) throw new Error(\"implementation bug\");\n          return l.__absoluteLess(i);\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"__equalToNumber\",\n      value: function value(e, t) {\n        return t | 0 === t ? 0 === t ? 0 === e.length : 1 === e.length && e.sign === 0 > t && e.__unsignedDigit(0) === g(t) : 0 === l.__compareToDouble(e, t);\n      }\n    }, {\n      key: \"__comparisonResultToBool\",\n      value: function value(e, t) {\n        switch (t) {\n          case 0:\n            return 0 > e;\n\n          case 1:\n            return 0 >= e;\n\n          case 2:\n            return 0 < e;\n\n          case 3:\n            return 0 <= e;\n        }\n\n        throw new Error(\"unreachable\");\n      }\n    }, {\n      key: \"__compare\",\n      value: function value(e, t, i) {\n        if (e = l.__toPrimitive(e), t = l.__toPrimitive(t), \"string\" == typeof e && \"string\" == typeof t) switch (i) {\n          case 0:\n            return e < t;\n\n          case 1:\n            return e <= t;\n\n          case 2:\n            return e > t;\n\n          case 3:\n            return e >= t;\n        }\n        if (l.__isBigInt(e) && \"string\" == typeof t) return t = l.__fromString(t), null !== t && l.__comparisonResultToBool(l.__compareToBigInt(e, t), i);\n        if (\"string\" == typeof e && l.__isBigInt(t)) return e = l.__fromString(e), null !== e && l.__comparisonResultToBool(l.__compareToBigInt(e, t), i);\n\n        if (e = l.__toNumeric(e), t = l.__toNumeric(t), l.__isBigInt(e)) {\n          if (l.__isBigInt(t)) return l.__comparisonResultToBool(l.__compareToBigInt(e, t), i);\n          if (\"number\" != typeof t) throw new Error(\"implementation bug\");\n          return l.__comparisonResultToBool(l.__compareToNumber(e, t), i);\n        }\n\n        if (\"number\" != typeof e) throw new Error(\"implementation bug\");\n        if (l.__isBigInt(t)) return l.__comparisonResultToBool(l.__compareToNumber(t, e), 2 ^ i);\n        if (\"number\" != typeof t) throw new Error(\"implementation bug\");\n        return 0 === i ? e < t : 1 === i ? e <= t : 2 === i ? e > t : 3 === i ? e >= t : void 0;\n      }\n    }, {\n      key: \"__absoluteAdd\",\n      value: function value(e, t, _) {\n        if (e.length < t.length) return l.__absoluteAdd(t, e, _);\n        if (0 === e.length) return e;\n        if (0 === t.length) return e.sign === _ ? e : l.unaryMinus(e);\n        var n = e.length;\n        (0 === e.__clzmsd() || t.length === e.length && 0 === t.__clzmsd()) && n++;\n\n        for (var g = new l(n, _), o = 0, a = 0; a < t.length; a++) {\n          var s = t.__digit(a),\n              u = e.__digit(a),\n              r = (65535 & u) + (65535 & s) + o,\n              d = (u >>> 16) + (s >>> 16) + (r >>> 16);\n\n          o = d >>> 16, g.__setDigit(a, 65535 & r | d << 16);\n        }\n\n        for (; a < e.length; a++) {\n          var h = e.__digit(a),\n              b = (65535 & h) + o,\n              m = (h >>> 16) + (b >>> 16);\n\n          o = m >>> 16, g.__setDigit(a, 65535 & b | m << 16);\n        }\n\n        return a < g.length && g.__setDigit(a, o), g.__trim();\n      }\n    }, {\n      key: \"__absoluteSub\",\n      value: function value(e, t, _) {\n        if (0 === e.length) return e;\n        if (0 === t.length) return e.sign === _ ? e : l.unaryMinus(e);\n\n        for (var n = new l(e.length, _), g = 0, o = 0; o < t.length; o++) {\n          var a = e.__digit(o),\n              s = t.__digit(o),\n              u = (65535 & a) - (65535 & s) - g;\n\n          g = 1 & u >>> 16;\n          var r = (a >>> 16) - (s >>> 16) - g;\n          g = 1 & r >>> 16, n.__setDigit(o, 65535 & u | r << 16);\n        }\n\n        for (; o < e.length; o++) {\n          var d = e.__digit(o),\n              h = (65535 & d) - g;\n\n          g = 1 & h >>> 16;\n          var b = (d >>> 16) - g;\n          g = 1 & b >>> 16, n.__setDigit(o, 65535 & h | b << 16);\n        }\n\n        return n.__trim();\n      }\n    }, {\n      key: \"__absoluteAddOne\",\n      value: function value(e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length;\n\n        null === _ ? _ = new l(n, t) : _.sign = t;\n\n        for (var g, o = !0, a = 0; a < n; a++) {\n          if (g = e.__digit(a), o) {\n            var s = -1 === g;\n            g = 0 | g + 1, o = s;\n          }\n\n          _.__setDigit(a, g);\n        }\n\n        return o && _.__setDigitGrow(n, 1), _;\n      }\n    }, {\n      key: \"__absoluteSubOne\",\n      value: function value(e, t) {\n        var _ = e.length;\n        t = t || _;\n\n        for (var n, g = new l(t, !1), o = !0, a = 0; a < _; a++) {\n          if (n = e.__digit(a), o) {\n            var s = 0 === n;\n            n = 0 | n - 1, o = s;\n          }\n\n          g.__setDigit(a, n);\n        }\n\n        if (o) throw new Error(\"implementation bug\");\n\n        for (var u = _; u < t; u++) {\n          g.__setDigit(u, 0);\n        }\n\n        return g;\n      }\n    }, {\n      key: \"__absoluteAnd\",\n      value: function value(e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            g = t.length,\n            o = g;\n\n        if (n < g) {\n          o = n;\n          var a = e,\n              s = n;\n          e = t, n = g, t = a, g = s;\n        }\n\n        var u = o;\n        null === _ ? _ = new l(u, !1) : u = _.length;\n\n        for (var r = 0; r < o; r++) {\n          _.__setDigit(r, e.__digit(r) & t.__digit(r));\n        }\n\n        for (; r < u; r++) {\n          _.__setDigit(r, 0);\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteAndNot\",\n      value: function value(e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            g = t.length,\n            o = g;\n\n        n < g && (o = n);\n        var a = n;\n        null === _ ? _ = new l(a, !1) : a = _.length;\n\n        for (var s = 0; s < o; s++) {\n          _.__setDigit(s, e.__digit(s) & ~t.__digit(s));\n        }\n\n        for (; s < n; s++) {\n          _.__setDigit(s, e.__digit(s));\n        }\n\n        for (; s < a; s++) {\n          _.__setDigit(s, 0);\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteOr\",\n      value: function value(e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            g = t.length,\n            o = g;\n\n        if (n < g) {\n          o = n;\n          var a = e,\n              s = n;\n          e = t, n = g, t = a, g = s;\n        }\n\n        var u = n;\n        null === _ ? _ = new l(u, !1) : u = _.length;\n\n        for (var r = 0; r < o; r++) {\n          _.__setDigit(r, e.__digit(r) | t.__digit(r));\n        }\n\n        for (; r < n; r++) {\n          _.__setDigit(r, e.__digit(r));\n        }\n\n        for (; r < u; r++) {\n          _.__setDigit(r, 0);\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteXor\",\n      value: function value(e, t) {\n        var _ = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null,\n            n = e.length,\n            g = t.length,\n            o = g;\n\n        if (n < g) {\n          o = n;\n          var a = e,\n              s = n;\n          e = t, n = g, t = a, g = s;\n        }\n\n        var u = n;\n        null === _ ? _ = new l(u, !1) : u = _.length;\n\n        for (var r = 0; r < o; r++) {\n          _.__setDigit(r, e.__digit(r) ^ t.__digit(r));\n        }\n\n        for (; r < n; r++) {\n          _.__setDigit(r, e.__digit(r));\n        }\n\n        for (; r < u; r++) {\n          _.__setDigit(r, 0);\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteCompare\",\n      value: function value(e, t) {\n        var _ = e.length - t.length;\n\n        if (0 != _) return _;\n\n        for (var n = e.length - 1; 0 <= n && e.__digit(n) === t.__digit(n);) {\n          n--;\n        }\n\n        return 0 > n ? 0 : e.__unsignedDigit(n) > t.__unsignedDigit(n) ? 1 : -1;\n      }\n    }, {\n      key: \"__multiplyAccumulate\",\n      value: function value(e, t, _, n) {\n        if (0 !== t) {\n          for (var g = 65535 & t, o = t >>> 16, a = 0, s = 0, u = 0, r = 0; r < e.length; r++, n++) {\n            var d = _.__digit(n),\n                h = 65535 & d,\n                b = d >>> 16,\n                m = e.__digit(r),\n                c = 65535 & m,\n                v = m >>> 16,\n                f = l.__imul(c, g),\n                y = l.__imul(c, o),\n                k = l.__imul(v, g),\n                D = l.__imul(v, o);\n\n            h += s + (65535 & f), b += u + a + (h >>> 16) + (f >>> 16) + (65535 & y) + (65535 & k), a = b >>> 16, s = (y >>> 16) + (k >>> 16) + (65535 & D) + a, a = s >>> 16, s &= 65535, u = D >>> 16, d = 65535 & h | b << 16, _.__setDigit(n, d);\n          }\n\n          for (; 0 !== a || 0 !== s || 0 !== u; n++) {\n            var p = _.__digit(n),\n                B = (65535 & p) + s,\n                S = (p >>> 16) + (B >>> 16) + u + a;\n\n            s = 0, u = 0, a = S >>> 16, p = 65535 & B | S << 16, _.__setDigit(n, p);\n          }\n        }\n      }\n    }, {\n      key: \"__internalMultiplyAdd\",\n      value: function value(e, t, _, g, o) {\n        for (var a = _, s = 0, u = 0; u < g; u++) {\n          var r = e.__digit(u),\n              d = l.__imul(65535 & r, t),\n              h = (65535 & d) + s + a;\n\n          a = h >>> 16;\n\n          var b = l.__imul(r >>> 16, t),\n              m = (65535 & b) + (d >>> 16) + a;\n\n          a = m >>> 16, s = b >>> 16, o.__setDigit(u, m << 16 | 65535 & h);\n        }\n\n        if (o.length > g) for (o.__setDigit(g++, a + s); g < o.length;) {\n          o.__setDigit(g++, 0);\n        } else if (0 !== a + s) throw new Error(\"implementation bug\");\n      }\n    }, {\n      key: \"__absoluteDivSmall\",\n      value: function value(e, t, _) {\n        null === _ && (_ = new l(e.length, !1));\n\n        for (var n = 0, g = 2 * e.length - 1; 0 <= g; g -= 2) {\n          var o = (n << 16 | e.__halfDigit(g)) >>> 0,\n              a = 0 | o / t;\n          n = 0 | o % t, o = (n << 16 | e.__halfDigit(g - 1)) >>> 0;\n          var s = 0 | o / t;\n          n = 0 | o % t, _.__setDigit(g >>> 1, a << 16 | s);\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__absoluteModSmall\",\n      value: function value(e, t) {\n        for (var _, n = 0, l = 2 * e.length - 1; 0 <= l; l--) {\n          _ = (n << 16 | e.__halfDigit(l)) >>> 0, n = 0 | _ % t;\n        }\n\n        return n;\n      }\n    }, {\n      key: \"__absoluteDivLarge\",\n      value: function value(e, t, i, _) {\n        var g = t.__halfDigitLength(),\n            n = t.length,\n            o = e.__halfDigitLength() - g,\n            a = null;\n\n        i && (a = new l(o + 2 >>> 1, !1), a.__initializeDigits());\n        var s = new l(g + 2 >>> 1, !1);\n\n        s.__initializeDigits();\n\n        var r = l.__clz16(t.__halfDigit(g - 1));\n\n        0 < r && (t = l.__specialLeftShift(t, r, 0));\n\n        for (var d = l.__specialLeftShift(e, r, 1), u = t.__halfDigit(g - 1), h = 0, b = o; 0 <= b; b--) {\n          var m = 65535,\n              v = d.__halfDigit(b + g);\n\n          if (v !== u) {\n            var f = (v << 16 | d.__halfDigit(b + g - 1)) >>> 0;\n            m = 0 | f / u;\n\n            for (var y = 0 | f % u, k = t.__halfDigit(g - 2), D = d.__halfDigit(b + g - 2); l.__imul(m, k) >>> 0 > (y << 16 | D) >>> 0 && (m--, y += u, !(65535 < y));) {\n              ;\n            }\n          }\n\n          l.__internalMultiplyAdd(t, m, 0, n, s);\n\n          var p = d.__inplaceSub(s, b, g + 1);\n\n          0 !== p && (p = d.__inplaceAdd(t, b, g), d.__setHalfDigit(b + g, d.__halfDigit(b + g) + p), m--), i && (1 & b ? h = m << 16 : a.__setDigit(b >>> 1, h | m));\n        }\n\n        return _ ? (d.__inplaceRightShift(r), i ? {\n          quotient: a,\n          remainder: d\n        } : d) : i ? a : void 0;\n      }\n    }, {\n      key: \"__clz16\",\n      value: function value(e) {\n        return l.__clz32(e) - 16;\n      }\n    }, {\n      key: \"__specialLeftShift\",\n      value: function value(e, t, _) {\n        var g = e.length,\n            n = new l(g + _, !1);\n\n        if (0 === t) {\n          for (var o = 0; o < g; o++) {\n            n.__setDigit(o, e.__digit(o));\n          }\n\n          return 0 < _ && n.__setDigit(g, 0), n;\n        }\n\n        for (var a, s = 0, u = 0; u < g; u++) {\n          a = e.__digit(u), n.__setDigit(u, a << t | s), s = a >>> 32 - t;\n        }\n\n        return 0 < _ && n.__setDigit(g, s), n;\n      }\n    }, {\n      key: \"__leftShiftByAbsolute\",\n      value: function value(e, t) {\n        var _ = l.__toShiftAmount(t);\n\n        if (0 > _) throw new RangeError(\"BigInt too big\");\n        var n = _ >>> 5,\n            g = 31 & _,\n            o = e.length,\n            a = 0 !== g && 0 != e.__digit(o - 1) >>> 32 - g,\n            s = o + n + (a ? 1 : 0),\n            u = new l(s, e.sign);\n\n        if (0 === g) {\n          for (var r = 0; r < n; r++) {\n            u.__setDigit(r, 0);\n          }\n\n          for (; r < s; r++) {\n            u.__setDigit(r, e.__digit(r - n));\n          }\n        } else {\n          for (var h = 0, b = 0; b < n; b++) {\n            u.__setDigit(b, 0);\n          }\n\n          for (var m, c = 0; c < o; c++) {\n            m = e.__digit(c), u.__setDigit(c + n, m << g | h), h = m >>> 32 - g;\n          }\n\n          if (a) u.__setDigit(o + n, h);else if (0 !== h) throw new Error(\"implementation bug\");\n        }\n\n        return u.__trim();\n      }\n    }, {\n      key: \"__rightShiftByAbsolute\",\n      value: function value(e, t) {\n        var _ = e.length,\n            n = e.sign,\n            g = l.__toShiftAmount(t);\n\n        if (0 > g) return l.__rightShiftByMaximum(n);\n        var o = g >>> 5,\n            a = 31 & g,\n            s = _ - o;\n        if (0 >= s) return l.__rightShiftByMaximum(n);\n        var u = !1;\n\n        if (n) {\n          if (0 != (e.__digit(o) & (1 << a) - 1)) u = !0;else for (var r = 0; r < o; r++) {\n            if (0 !== e.__digit(r)) {\n              u = !0;\n              break;\n            }\n          }\n        }\n\n        if (u && 0 === a) {\n          var h = e.__digit(_ - 1);\n\n          0 == ~h && s++;\n        }\n\n        var b = new l(s, n);\n        if (0 === a) for (var m = o; m < _; m++) {\n          b.__setDigit(m - o, e.__digit(m));\n        } else {\n          for (var c, v = e.__digit(o) >>> a, f = _ - o - 1, y = 0; y < f; y++) {\n            c = e.__digit(y + o + 1), b.__setDigit(y, c << 32 - a | v), v = c >>> a;\n          }\n\n          b.__setDigit(f, v);\n        }\n        return u && (b = l.__absoluteAddOne(b, !0, b)), b.__trim();\n      }\n    }, {\n      key: \"__rightShiftByMaximum\",\n      value: function value(e) {\n        return e ? l.__oneDigit(1, !0) : l.__zero();\n      }\n    }, {\n      key: \"__toShiftAmount\",\n      value: function value(e) {\n        if (1 < e.length) return -1;\n\n        var t = e.__unsignedDigit(0);\n\n        return t > l.__kMaxLengthBits ? -1 : t;\n      }\n    }, {\n      key: \"__toPrimitive\",\n      value: function value(t) {\n        var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : \"default\";\n        if (\"object\" !== e(t)) return t;\n        if (t.constructor === l) return t;\n        var _ = t[Symbol.toPrimitive];\n\n        if (_) {\n          var n = _(i);\n\n          if (\"object\" !== e(n)) return n;\n          throw new TypeError(\"Cannot convert object to primitive value\");\n        }\n\n        var g = t.valueOf;\n\n        if (g) {\n          var o = g.call(t);\n          if (\"object\" !== e(o)) return o;\n        }\n\n        var a = t.toString;\n\n        if (a) {\n          var s = a.call(t);\n          if (\"object\" !== e(s)) return s;\n        }\n\n        throw new TypeError(\"Cannot convert object to primitive value\");\n      }\n    }, {\n      key: \"__toNumeric\",\n      value: function value(e) {\n        return l.__isBigInt(e) ? e : +e;\n      }\n    }, {\n      key: \"__isBigInt\",\n      value: function value(t) {\n        return \"object\" === e(t) && t.constructor === l;\n      }\n    }, {\n      key: \"__truncateToNBits\",\n      value: function value(e, t) {\n        for (var _ = e + 31 >>> 5, n = new l(_, t.sign), g = _ - 1, o = 0; o < g; o++) {\n          n.__setDigit(o, t.__digit(o));\n        }\n\n        var a = t.__digit(g);\n\n        if (0 != (31 & e)) {\n          var s = 32 - (31 & e);\n          a = a << s >>> s;\n        }\n\n        return n.__setDigit(g, a), n.__trim();\n      }\n    }, {\n      key: \"__truncateAndSubFromPowerOfTwo\",\n      value: function value(e, t, _) {\n        for (var n = Math.min, g = e + 31 >>> 5, o = new l(g, _), a = 0, s = g - 1, u = 0, r = n(s, t.length); a < r; a++) {\n          var d = t.__digit(a),\n              h = 0 - (65535 & d) - u;\n\n          u = 1 & h >>> 16;\n          var b = 0 - (d >>> 16) - u;\n          u = 1 & b >>> 16, o.__setDigit(a, 65535 & h | b << 16);\n        }\n\n        for (; a < s; a++) {\n          o.__setDigit(a, 0 | -u);\n        }\n\n        var m,\n            c = s < t.length ? t.__digit(s) : 0,\n            v = 31 & e;\n\n        if (0 === v) {\n          var f = 0 - (65535 & c) - u;\n          u = 1 & f >>> 16;\n          var y = 0 - (c >>> 16) - u;\n          m = 65535 & f | y << 16;\n        } else {\n          var k = 32 - v;\n          c = c << k >>> k;\n          var D = 1 << 32 - k,\n              p = (65535 & D) - (65535 & c) - u;\n          u = 1 & p >>> 16;\n          var B = (D >>> 16) - (c >>> 16) - u;\n          m = 65535 & p | B << 16, m &= D - 1;\n        }\n\n        return o.__setDigit(s, m), o.__trim();\n      }\n    }, {\n      key: \"__digitPow\",\n      value: function value(e, t) {\n        for (var i = 1; 0 < t;) {\n          1 & t && (i *= e), t >>>= 1, e *= e;\n        }\n\n        return i;\n      }\n    }]), l;\n  }(u(Array));\n\n  return y.__kMaxLength = 33554432, y.__kMaxLengthBits = y.__kMaxLength << 5, y.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], y.__kBitsPerCharTableShift = 5, y.__kBitsPerCharTableMultiplier = 1 << y.__kBitsPerCharTableShift, y.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], y.__kBitConversionBuffer = new ArrayBuffer(8), y.__kBitConversionDouble = new Float64Array(y.__kBitConversionBuffer), y.__kBitConversionInts = new Int32Array(y.__kBitConversionBuffer), y.__clz32 = f || function (e) {\n    var t = Math.LN2,\n        i = Math.log;\n    return 0 === e ? 32 : 0 | 31 - (0 | i(e >>> 0) / t);\n  }, y.__imul = v || function (e, t) {\n    return 0 | e * t;\n  }, y;\n});","map":null,"metadata":{},"sourceType":"script"}