{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function logPolicy(logger) {\n  if (logger === void 0) {\n    logger = console.log;\n  }\n\n  return {\n    create: function create(nextPolicy, options) {\n      return new LogPolicy(nextPolicy, options, logger);\n    }\n  };\n}\n\nvar LogPolicy =\n/** @class */\nfunction (_super) {\n  __extends(LogPolicy, _super);\n\n  function LogPolicy(nextPolicy, options, logger) {\n    if (logger === void 0) {\n      logger = console.log;\n    }\n\n    var _this = _super.call(this, nextPolicy, options) || this;\n\n    _this.logger = logger;\n    return _this;\n  }\n\n  LogPolicy.prototype.sendRequest = function (request) {\n    var _this = this;\n\n    return this._nextPolicy.sendRequest(request).then(function (response) {\n      return logResponse(_this, response);\n    });\n  };\n\n  return LogPolicy;\n}(BaseRequestPolicy);\n\nexport { LogPolicy };\n\nfunction logResponse(policy, response) {\n  policy.logger(\">> Request: \" + JSON.stringify(response.request, undefined, 2));\n  policy.logger(\">> Response status code: \" + response.status);\n  var responseBody = response.bodyAsText;\n  policy.logger(\">> Body: \" + responseBody);\n  return Promise.resolve(response);\n}","map":null,"metadata":{},"sourceType":"module"}